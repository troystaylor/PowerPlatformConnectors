{
  "swagger": "2.0",
  "info": {
    "title": "Converter by Power2Apps",
    "description": "Enables conversion of different data formats from one to another.",
    "contact": {
      "name": "Power2Apps Support",
      "url": "https://www.power2apps.com/en/contact",
      "email": "getintouch@power2apps.com"
    },
    "version": "1.0.8"
  },
  "host": "webapiconverterservice20211014190508.azurewebsites.net",
  "schemes": [
    "https"
  ],
  "basePath": "/Converter",
  "paths": {
    "/GetHealth": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetHealth",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get Health Check",
        "description": "Returns the health state of the service"
      }
    },
    "/GetSeparators": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetSeparators",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Separators",
        "description": "Returns list of separators"
      }
    },
    "/ConvertJsonToCsvdata": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToCsvdata",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to CSV",
        "description": "Convert JSON to CSV"
      }
    },
    "/ConvertJsonToCsv": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToCsv",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsvResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to CSV",
        "description": "Convert a JSON to a CSV"
      }
    },
    "/ConvertJsonToCsvV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToCsvV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "delimiter",
            "type": "string",
            "default": ";",
            "x-ms-dynamic-values": {
              "operationId": "GetSeparators",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Separator",
            "description": "Separator (delimiter) of the fields. Default = ';'"
          },
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsvResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to CSV",
        "description": "Convert a JSON to a CSV - https://converter.power2apps.com/1000_fileConversions/1012_ConvertJsonToCsvV2"
      }
    },
    "/ConvertCsvdataToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvdataToJson",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "csv",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV data"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert CSV data to JSON",
        "description": "Convert CSV data to JSON"
      }
    },
    "/ConvertCsvToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "dataIncludesHeader",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "CSV has headers?",
            "description": "CSV has headers?"
          },
          {
            "in": "header",
            "name": "autoDiscoverFieldTypes",
            "type": "boolean",
            "default": false,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic field type detection?",
            "description": "Automatic field type detection?"
          },
          {
            "in": "header",
            "name": "maxScanRows",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Number of rows for field type detection",
            "description": "Number of rows for automatic field type detection. Default = 20"
          },
          {
            "in": "header",
            "name": "ignoreEmptyLine",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Remove empty rows",
            "description": "Remove empty rows"
          },
          {
            "in": "header",
            "name": "skip",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Skip a number of rows",
            "description": "Skip a number of rows at beginning. Default = 0"
          },
          {
            "in": "header",
            "name": "skipLast",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Stop at a specific row",
            "description": "Stop at a specific row number. Default = convert all rows"
          },
          {
            "in": "header",
            "name": "delimiter",
            "type": "string",
            "default": " Automatic detection of separator",
            "x-ms-dynamic-values": {
              "operationId": "GetSeparators",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Separator",
            "description": "Separator (delimiter) of the fields. Default = 'Automatic detection of separator'"
          },
          {
            "in": "header",
            "name": "mayHaveQuotedFields",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic quote delimiter detection?",
            "description": "Automatic quote delimiter detection?"
          },
          {
            "in": "body",
            "name": "csvData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsvData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert CSV to JSON",
        "description": "Convert a CSV to a JSON - https://converter.power2apps.com/1000_fileConversions/1021_ConvertCsvToJson"
      }
    },
    "/ConvertCsvdataToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvdataToExcel",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "csv",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV data"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileContentResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert CSV data to Excel file",
        "description": "Convert CSV data to Excel file"
      }
    },
    "/ConvertCsvToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvToExcel",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "dataIncludesHeader",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "CSV has headers?",
            "description": "CSV has headers?"
          },
          {
            "in": "header",
            "name": "autoDiscoverFieldTypes",
            "type": "boolean",
            "default": false,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic field type detection?",
            "description": "Automatic field type detection?"
          },
          {
            "in": "header",
            "name": "maxScanRows",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Number of rows for field type detection",
            "description": "Number of rows for automatic field type detection. Default = 20"
          },
          {
            "in": "header",
            "name": "ignoreEmptyLine",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Remove empty rows",
            "description": "Remove empty rows"
          },
          {
            "in": "header",
            "name": "skip",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Skip a number of rows",
            "description": "Skip a number of rows at beginning. Default = 0"
          },
          {
            "in": "header",
            "name": "skipLast",
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Stop at a specific row",
            "description": "Stop at a specific row number. Default = convert all rows"
          },
          {
            "in": "header",
            "name": "delimiter",
            "type": "string",
            "default": " Automatic detection of separator",
            "x-ms-dynamic-values": {
              "operationId": "GetSeparators",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Separator",
            "description": "Separator (delimiter) of the fields. Default = 'Automatic detection of separator'"
          },
          {
            "in": "header",
            "name": "mayHaveQuotedFields",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Automatic quote delimiter detection?",
            "description": "Automatic quote delimiter detection?"
          },
          {
            "in": "body",
            "name": "csvData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsvData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "CSV",
            "description": "CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert CSV to Excel file",
        "description": "Convert a CSV to a Excel file (XLSX) - https://converter.power2apps.com/1000_fileConversions/1031_ConvertCsvToExcel"
      }
    },
    "/ConvertJsonToXml": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToXml",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to XML",
        "description": "Convert JSON to XML"
      }
    },
    "/ConvertJsonToXmlV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToXmlV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/XmlResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to XML",
        "description": "Convert a JSON to an XML - https://converter.power2apps.com/1000_fileConversions/1041_ConvertJsonToXmlV2"
      }
    },
    "/ConvertXmlToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertXmlToJson",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "xml",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "XML",
            "description": "XML"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert XML to JSON",
        "description": "Convert XML to JSON"
      }
    },
    "/ConvertXmlToJsonV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertXmlToJsonV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "xmlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/XmlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "XML",
            "description": "XML"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert XML to JSON",
        "description": "Convert an XML to a JSON - https://converter.power2apps.com/1000_fileConversions/1051_ConvertXmlToJsonV2"
      }
    },
    "/ConvertJsonToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToExcel",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "allInOneTable",
            "type": "boolean",
            "x-ms-visibility": "important",
            "x-ms-summary": "All in one table",
            "description": "All in one table"
          },
          {
            "in": "body",
            "name": "json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileContentResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to Excel file",
        "description": "Convert JSON to Excel file"
      }
    },
    "/ConvertJsonToExcelV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToExcelV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "allInOneTable",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "important",
            "x-ms-summary": "All in one table",
            "description": "All in one table"
          },
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to Excel File",
        "description": "Convert a JSON to an Excel file (XLSX) - https://converter.power2apps.com/1000_fileConversions/1061_ConvertJsonToExcelV2"
      }
    },
    "/ConvertYamlToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertYamlToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "yamlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YamlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "YAML",
            "description": "YAML"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert YAML to JSON",
        "description": "Convert a YAML to a JSON - https://converter.power2apps.com/1000_fileConversions/1070_ConvertYamlToJson"
      }
    },
    "/ConvertJsonToYaml": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToYaml",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "JSON",
            "description": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/YamlResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to YAML",
        "description": "Convert a JSON to a YAML - https://converter.power2apps.com/1000_fileConversions/1080_ConvertJsonToYaml"
      }
    },
    "/GetRegexOptions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetRegexOptions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of regular expression options",
        "description": "Returns supported regular expression options"
      }
    },
    "/GetLanguages": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetLanguages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of languages",
        "description": "Returns language list"
      }
    },
    "/RegularExpression": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "RegularExpression",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "regExpRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegExpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegExp"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Regular Expression (RegEx)",
        "description": "Searches the specified input string for all occurrences of a specified .NET regular expression (RegEx), using the specified matching options. - https://converter.power2apps.com/2000_dataHandling/2010_RegularExpression"
      }
    },
    "/IbanData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "IbanData",
        "consumes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "IBAN",
            "description": "IBAN"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BankingAccountData"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Extract Information from IBAN",
        "description": "Get the bank account details like account number, bank name, bank address and SWIFT code from International Bank Account Number (IBAN) - https://converter.power2apps.com/2000_dataHandling/2020_IbanData"
      }
    },
    "/UrlToFile": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "UrlToFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "urlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UrlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "URL",
            "description": "URL"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Get File from URL",
        "description": "Get a file (PDF, JPG, JPEG, PNG, CSV, ...) from an URL - https://converter.power2apps.com/2000_dataHandling/2030_UrlToFile"
      }
    },
    "/Translate": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "Translate",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "from",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetLanguages",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "From",
            "description": "From"
          },
          {
            "in": "header",
            "name": "to",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetLanguages",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "To",
            "description": "To"
          },
          {
            "in": "body",
            "name": "translationData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranslationData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Text",
            "description": "Text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TranslationResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Translate Text",
        "description": "Translate a word or sentence - https://converter.power2apps.com/2000_dataHandling/2040_Translate"
      }
    },
    "/GetImageFormats": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetImageFormats",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of image formats",
        "description": "Returns supported image formats"
      }
    },
    "/GetResizeOptions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetResizeOptions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Resize options",
        "description": "Returns list of Resize options"
      }
    },
    "/GetCodeFormats": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetCodeFormats",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of code formats",
        "description": "Returns supported code formats"
      }
    },
    "/ConvertImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "outFormat",
            "type": "string",
            "default": "jpeg",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Output format",
            "description": "Output format"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert Image to another Image Format",
        "description": "Convert an image to another format (JPEG, JPG, PNG, BMP, GIF, TIFF)"
      }
    },
    "/ResizeImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ResizeImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "width",
            "type": "number",
            "format": "double",
            "x-ms-visibility": "important",
            "x-ms-summary": "Width",
            "description": "The width of the image - empty for auto"
          },
          {
            "in": "header",
            "name": "height",
            "type": "number",
            "format": "double",
            "x-ms-visibility": "important",
            "x-ms-summary": "Height",
            "description": "The height of the image - empty for auto"
          },
          {
            "in": "header",
            "name": "outFormat",
            "type": "string",
            "default": "JPEG",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Format",
            "description": "Outputformat"
          },
          {
            "in": "header",
            "name": "resizeBy",
            "type": "string",
            "default": "px",
            "x-ms-dynamic-values": {
              "operationId": "GetResizeOptions",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Resize By",
            "description": "Resize By"
          },
          {
            "in": "body",
            "name": "fileData",
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Resize Image",
        "description": "Adjust the width and height of an image (JPEG, JPG, PNG, BMP, GIF, TIFF)"
      }
    },
    "/ResizeImageV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ResizeImageV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "width",
            "type": "number",
            "format": "double",
            "x-ms-visibility": "important",
            "x-ms-summary": "Width",
            "description": "The width of the image - empty for auto"
          },
          {
            "in": "header",
            "name": "height",
            "type": "number",
            "format": "double",
            "x-ms-visibility": "important",
            "x-ms-summary": "Height",
            "description": "The height of the image - empty for auto"
          },
          {
            "in": "header",
            "name": "resizeBy",
            "type": "string",
            "default": "px",
            "x-ms-dynamic-values": {
              "operationId": "GetResizeOptions",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Resize By",
            "description": "Resize By"
          },
          {
            "in": "body",
            "name": "fileData",
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Resize Image",
        "description": "Adjust the width and height of an image (JPEG, JPG, PNG, BMP, GIF, TIFF) - https://converter.power2apps.com/3000_imagesBarcodes/3021_ResizeImage"
      }
    },
    "/RotateImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "RotateImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "rotate",
            "type": "number",
            "format": "float",
            "default": 90,
            "x-ms-visibility": "important",
            "x-ms-summary": "Rotate",
            "description": "Degrees the image is rotated with"
          },
          {
            "in": "header",
            "name": "outFormat",
            "type": "string",
            "default": "jpeg",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Output format",
            "description": "Output format"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Rotate Image",
        "description": "Rotate an image (JPEG, JPG, PNG, BMP, GIF, TIFF) by an angle (degree) of your choice - https://converter.power2apps.com/3000_imagesBarcodes/3030_RotateImage"
      }
    },
    "/CompressImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CompressImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "quality",
            "type": "integer",
            "format": "int32",
            "default": 70,
            "x-ms-visibility": "important",
            "x-ms-summary": "Image Quality",
            "description": "The quality of the image (0-100)"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Compress JPG Image",
        "description": "Compress a JPG (JPEG) image - https://converter.power2apps.com/3000_imagesBarcodes/3040_CompressImage"
      }
    },
    "/ReadCode": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ReadCode",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CodeResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Read QR or Barcode",
        "description": "Read a QR code or Barcode from an image - https://converter.power2apps.com/3000_imagesBarcodes/3050_ReadQrOrBarcode"
      }
    },
    "/CreateCode": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateCode",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "content",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Content",
            "description": "The content of the generated code"
          },
          {
            "in": "query",
            "name": "width",
            "type": "integer",
            "format": "int32",
            "default": 200,
            "x-ms-visibility": "important",
            "x-ms-summary": "Width",
            "description": "The width in px"
          },
          {
            "in": "query",
            "name": "height",
            "type": "integer",
            "format": "int32",
            "default": 200,
            "x-ms-visibility": "important",
            "x-ms-summary": "Height",
            "description": "The height in px"
          },
          {
            "in": "query",
            "name": "codeFormat",
            "type": "string",
            "default": "QR CODE",
            "x-ms-dynamic-values": {
              "operationId": "GetCodeFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Code format",
            "description": "The format of the Qr/Bar Code"
          },
          {
            "in": "query",
            "name": "outFormat",
            "type": "string",
            "default": "JPEG",
            "x-ms-dynamic-values": {
              "operationId": "GetImageFormats",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Output format",
            "description": "Output format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Create QR or Barcode",
        "description": "Create a QR code or a Barcode from a string"
      }
    },
    "/ImageMetaData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ImageMetaData",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageMetaDataResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Extract Information from Image",
        "description": "Get the metadata information from an image (JPEG, JPG, PNG, BMP, GIF, TIFF, ...) - https://converter.power2apps.com/3000_imagesBarcodes/3070_ImageMetaData"
      }
    },
    "/GetFileExtensions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetFileExtensions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of file extensions",
        "description": "Returns supported file extensions"
      }
    },
    "/ConvertFileToPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertFileToPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "fileName",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "File Name",
            "description": "File name"
          },
          {
            "in": "header",
            "name": "fileExtension",
            "type": "string",
            "default": "Extract from File name",
            "x-ms-dynamic-values": {
              "operationId": "GetFileExtensions",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "File Extension",
            "description": "File extension"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "File",
            "description": "File"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileContentResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert file (DOCX, PPTX, XLSX, HTML, ...) to PDF",
        "description": "Convert a document (Word, Powerpoint, Excel, ..) to a PDF file"
      }
    },
    "/ConvertFileToPdfV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertFileToPdfV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "fileName",
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Origin File Name",
            "description": "Only used with 'Extract from origin file name'. E.g. 'MyFileName.docx'"
          },
          {
            "in": "header",
            "name": "fileExtension",
            "type": "string",
            "default": "HTML",
            "x-ms-dynamic-values": {
              "operationId": "GetFileExtensions",
              "value-path": "name",
              "value-title": "name",
              "parameters": { }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Origin File Extension",
            "description": "Origin File extension"
          },
          {
            "in": "body",
            "name": "file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "File",
            "description": "File"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert File (DOCX, PPTX, XLSX, HTML, ...) to PDF",
        "description": "Convert a document file (Word, Powerpoint, Excel, ..) to a PDF file - https://converter.power2apps.com/4000_pdf/4011_ConvertFileToPDFV2"
      }
    },
    "/MergePDFs": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "MergePDFs",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileDataTuple"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Merge PDF Files",
        "description": "Merge two PDF files into one PDF file - https://converter.power2apps.com/4000_pdf/4020_MergePDFs"
      }
    },
    "/PDFMetaData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "PDFMetaData",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pdf_Metadata"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Extract Information from PDF",
        "description": "Get the metadata of a PDF - https://converter.power2apps.com/4000_pdf/4030_PDFMetaData"
      }
    },
    "/ProtectPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ProtectPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "ownerPassword",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Owner Password",
            "description": "Protect the editing of the PDF with the owner password"
          },
          {
            "in": "header",
            "name": "userPassword",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "User Password",
            "description": "Protect the opening of the PDF with the user password"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Protect PDF",
        "description": "Protect a PDF with a password - https://converter.power2apps.com/4000_pdf/4040_ProtectPDF"
      }
    },
    "/UnProtectPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "UnProtectPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "ownerPassword",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Owner Password",
            "description": "Owner Password"
          },
          {
            "in": "header",
            "name": "removePermissions",
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Remove Permissions",
            "description": "Remove all access permissions"
          },
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Unprotect PDF",
        "description": "Remove the protection from a pdf - https://converter.power2apps.com/4000_pdf/4050_UnprotectPDF"
      }
    },
    "/GetWordSectionTypes": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetWordSectionTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Word section types",
        "description": "Returns supported Word section types"
      }
    },
    "/GetWordTableStyles": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetWordTableStyles",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Word table styles",
        "description": "Returns supported Word table styles"
      }
    },
    "/CreateWordFile": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateWordFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordCreationObject",
            "schema": {
              "$ref": "#/definitions/WordCreationObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Create Word File",
        "description": "Create a Word file (DOCX) with multiple text sections or add multiple text sections to a Word file (DOCX) - https://converter.power2apps.com/5000_word/5010_CreateWordFile"
      }
    },
    "/ExtractWordBookmarks": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ExtractWordBookmarks",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValPair"
              }
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Extract Bookmarks from Word File",
        "description": "Extract all bookmarks from a Word fie (DOCX) and get them as a list - https://converter.power2apps.com/5000_word/5020_ExtractWordBookmarks"
      }
    },
    "/AddImageToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddImageToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordImage",
            "schema": {
              "$ref": "#/definitions/WordImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File",
        "description": "Add Image to a Word file (DOCX) or create a new Word file (DOCX) with image - https://converter.power2apps.com/5000_word/5030_AddImageToWord"
      }
    },
    "/AddImageWithinTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddImageWithinTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordImage",
            "schema": {
              "$ref": "#/definitions/WordImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File within Table",
        "description": "Add an image to a Word file (DOCX) within a table or create a new Word file (DOCX) with an image within a table"
      }
    },
    "/AddImageWithinTableToWordV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddImageWithinTableToWordV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordImageWithinTable",
            "schema": {
              "$ref": "#/definitions/WordImageWithinTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File within Table",
        "description": "Add an image to a Word file (DOCX) within a table or create a new Word file (DOCX) with an image within a table - https://converter.power2apps.com/5000_word/5041_AddImageWithinTableToWordV2"
      }
    },
    "/AddTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordTable",
            "schema": {
              "$ref": "#/definitions/WordTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add Table to Word File",
        "description": "Add Table to a Word file (DOCX) or create a new Word file (DOCX) with a table - https://converter.power2apps.com/5000_word/5050_AddTableToWord"
      }
    },
    "/AddTextToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddTextToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wordText",
            "schema": {
              "$ref": "#/definitions/WordText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add Text to Word File",
        "description": "Add a text to a Word file (DOCX) or create a new Word file (DOCX) with a text - https://converter.power2apps.com/5000_word/5060_AddTextToWord"
      }
    },
    "/InsertTextToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "InsertTextToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "insertWordText",
            "schema": {
              "$ref": "#/definitions/InsertWordText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Insert Text to Word File",
        "description": "Insert a text to a Word file (DOCX) - https://converter.power2apps.com/5000_word/5070_InsertTextToWord"
      }
    },
    "/InsertImageToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "InsertImageToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "insertWordImage",
            "schema": {
              "$ref": "#/definitions/InsertWordImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Insert Image to Word File",
        "description": "Insert Image to a Word file (DOCX) - https://converter.power2apps.com/5000_word/5080_InsertImageToWord"
      }
    },
    "/InsertTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "InsertTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "insertWordTable",
            "schema": {
              "$ref": "#/definitions/InsertWordTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Insert Table to Word File",
        "description": "Insert Table to a Word file (DOCX - https://converter.power2apps.com/5000_word/5090_InsertTableToWord"
      }
    },
    "/ConvertSharePointSearchResults": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertSharePointSearchResults",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "sharepointResultData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharepointResultData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "SP search result",
            "description": "SharePoint search result"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SharePointSearchResultResponse"
              }
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Extract results from Send HTTP request to SharePoint search",
        "description": "Extract results from the action 'Send HTTP request to SharePoint' search - https://converter.power2apps.com/6000_SharePoint/6010_ConvertSharePointSearchResults"
      }
    },
    "/ConvertHTMLtableToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHTMLtableToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "htmlTableData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlTableData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML Table",
            "description": "HTML table"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert HTML Table to JSON",
        "description": "Convert an HTML table to a JSON or extract the first HTML table from an URL and convert it to a JSON"
      }
    },
    "/ConvertHTMLtableToJsonV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHTMLtableToJsonV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "htmlTableData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlTableData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML Table",
            "description": "HTML table"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonTableResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert HTML Table to JSON",
        "description": "Convert an HTML table to a JSON or extract the first HTML table from an URL and convert it to a JSON - https://converter.power2apps.com/7000_html/7011_ConvertHtmlTableToJsonV2"
      }
    },
    "/ConvertHtmlToPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHtmlToPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "htmlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML",
            "description": "HTML"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert HTML or URL to PDF",
        "description": "Convert an HTML to a PDF or convert an URL containing HTML to a PDF - https://converter.power2apps.com/7000_html/7020_ConvertHtmlToPdf"
      }
    },
    "/ConvertHtmlToImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHtmlToImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "width",
            "type": "integer",
            "format": "int32",
            "default": 500,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Width",
            "description": "The width in px"
          },
          {
            "in": "header",
            "name": "height",
            "type": "integer",
            "format": "int32",
            "default": 500,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Height",
            "description": "The height in px"
          },
          {
            "in": "body",
            "name": "htmlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HtmlData"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "HTML",
            "description": "HTML"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert HTML or URL to JPG Image",
        "description": "Convert an HTML to an JPG (JPEG) Image or convert an URL containing HTML to an JPG (JPEG) Image - https://converter.power2apps.com/7000_html/7030_ConvertHtmlToImage"
      }
    },
    "/SortJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "SortJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestSortJsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestSortJsonData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseJson"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Sort JSON",
        "description": "Sort a JSON object, list or array - https://converter.power2apps.com/2000_dataHandling/2050_SortJson"
      }
    },
    "/SortCsv": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "SortCsv",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestSortCsvData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestSortCsvData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseCsv"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Sort CSV",
        "description": "Sort a CSV - https://converter.power2apps.com/2000_dataHandling/2060_SortCsv"
      }
    },
    "/ConvertColor": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertColor",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestColorData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestColorData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseColor"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert any Color to any other Color Code",
        "description": "Convert a color (RGB, HEX, HSL, CMYK, HSV, XYZ, YIQ, YUV, Color name) to different color types (RGB, HEX, HSL, CMYK, HSV, XYZ, YIQ, YUV) - https://converter.power2apps.com/2000_dataHandling/2070_ConvertColor"
      }
    },
    "/JoinCsvs": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "JoinCsvs",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestJoinCsvData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestJoinCsvData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseCsv"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Join CSVs",
        "description": "Join (aka merge, concate or combine) CSV tables - https://converter.power2apps.com/2000_dataHandling/2080_JoinCsvs"
      }
    },
    "/JoinJsons": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "JoinJsons",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestJoinJsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestJoinJsonData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseJson"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Join JSONs",
        "description": "Join (aka merge, concate or combine) JSON lists - https://converter.power2apps.com/2000_dataHandling/2090_JoinJsons"
      }
    },
    "/GetChartTypes": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetChartTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Chart types",
        "description": "Returns list of chart types"
      }
    },
    "/GetImagePositionHorizontal": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetImagePositionHorizontal",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get Image Position Horizontal",
        "description": "Returns list of  image position horizontal"
      }
    },
    "/GetImagePositionVertical": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetImagePositionVertical",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get Image Position Vertical",
        "description": "Returns list of image position vertical"
      }
    },
    "/GetChartImageFormats": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetChartImageFormats",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of chart image formats",
        "description": "Returns supported image formats"
      }
    },
    "/ConvertImageV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertImageV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestImageFileData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestConvertImageFileData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert Image to another Image Format",
        "description": "Convert a common (JPEG, JPG, PNG, BMP, GIF, TIFF, SVG, ..) image to another format (JPEG, JPG, PNG, BMP, GIF, TIFF) - https://converter.power2apps.com/3000_imagesBarcodes/3011_ConvertImageV2"
      }
    },
    "/CreateCodeV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateCodeV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestCodeData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestCreateCodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Create QR or Barcode",
        "description": "Create a QR code or a Barcode from a string - https://converter.power2apps.com/3000_imagesBarcodes/3060_CreateCodeV2"
      }
    },
    "/CreateWatermarkImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateWatermarkImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestWatermarkImageData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestWatermarkImageData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Create Watermark Image",
        "description": "Overlap an image (JPEG, JPG, PNG, BMP, GIF, TIFF) by another image - https://converter.power2apps.com/3000_imagesBarcodes/3080_CreateImageWatermark"
      }
    },
    "/CreateChartImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateChartImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestChartData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestChartData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Create Chart Image from Table",
        "description": "Convert a table (JSON or CSV) into a visual chart (pie, bar, line, ...) - https://converter.power2apps.com/3000_imagesBarcodes/3090_CreateImageChart"
      }
    },
    "/CreateTableImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateTableImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestChartTableData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestChartTableData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Create Table Image from Table Data",
        "description": "Convert table data (JSON or CSV) into a visual table formatted as a picture - https://converter.power2apps.com/3000_imagesBarcodes/3100_CreateImageTable"
      }
    },
    "/CreateGraphImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "CreateGraphImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoReqeustChartGraphData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestChartGraphData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Create Graph Image",
        "description": "Convert Graph Description Language (DOT) into visual diagrams or charts with Graphviz - https://converter.power2apps.com/3000_imagesBarcodes/3110_CreateImageGraph"
      }
    },
    "/AddTableToWordV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddTableToWordV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestWordTableData",
            "schema": {
              "$ref": "#/definitions/DtoRequestWordTableData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add Table to Word File",
        "description": "Add Table to a Word file (DOCX) or create a new Word file (DOCX) with a table - https://converter.power2apps.com/5000_word/5051_AddTableToWordV2"
      }
    },
    "/AddHtmlToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "AddHtmlToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestWordHtmlData",
            "schema": {
              "$ref": "#/definitions/DtoRequestWordHtmlData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Add HTML to Word File",
        "description": "Add a HTML to a Word file (DOCX) or create a new Word file (DOCX) with a HTML - https://converter.power2apps.com/5000_word/5100_AddHtmlToWord"
      }
    },
    "/GetPaperFormats": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetPaperFormats",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Paper formats",
        "description": "Returns list of paper formats"
      }
    },
    "/GetFooterOptions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetFooterOptions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Footer options",
        "description": "Returns list of footer options"
      }
    },
    "/GetHeaderOptions": {
      "get": {
        "tags": [
          "Converter"
        ],
        "operationId": "GetHeaderOptions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOption"
              }
            }
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Get list of Header options",
        "description": "Returns list of header options"
      }
    },
    "/ConvertHtmlToPdfV2": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHtmlToPdfV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestHtmlToPdfData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestHtmlToPdfData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert HTML or URL to PDF",
        "description": "Convert an HTML to a PDF or convert an URL containing HTML to a PDF - https://converter.power2apps.com/7000_html/7021_ConvertHtmlToPdfV2"
      }
    },
    "/ConvertHtmlToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertHtmlToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestHtmlData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestHtmlWordData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert HTML to Word File",
        "description": "Convert HTML to a Word file (DOCX) - https://converter.power2apps.com/7000_html/7040_ConvertHtmlToWord"
      }
    },
    "/ConvertJsonToHtmlTable": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertJsonToHtmlTable",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestJsonData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestJsonData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtml"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert JSON to HTML Table",
        "description": "Convert a JSON to a HTML table - https://converter.power2apps.com/7000_html/7050_ConvertJsonToHtmlTable"
      }
    },
    "/ConvertCsvToHtmlTable": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "ConvertCsvToHtmlTable",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestCsvData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestCsvData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtml"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "summary": "Convert CSV to HTML Table",
        "description": "Convert a CSV to a HTML table - https://converter.power2apps.com/7000_html/7060_ConvertCsvToHtmlTable"
      }
    },
    "/V1013_ConvertJsonToCsv": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1013_ConvertJsonToCsv",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1013_ConvertJsonToCsv",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1013_ConvertJsonToCsv"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1013_ConvertJsonToCsv"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to CSV",
        "description": "Convert a JSON to a CSV - https://converter.power2apps.com/1000_fileConversions/V1013_ConvertJsonToCsv"
      }
    },
    "/V1022_ConvertCsvToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1022_ConvertCsvToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1022_ConvertCsvToJson",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1022_ConvertCsvToJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1022_ConvertCsvToJson"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert CSV to JSON",
        "description": "Convert a CSV to a JSON - https://converter.power2apps.com/1000_fileConversions/V1022_ConvertCsvToJson"
      }
    },
    "/V1032_ConvertCsvToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1032_ConvertCsvToExcel",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1032_ConvertCsvToExcel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1032_ConvertCsvToExcel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1032_ConvertCsvToExcel"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert CSV to Excel File",
        "description": "Convert a CSV to a Excel file (XLSX) - https://converter.power2apps.com/1000_fileConversions/V1032_ConvertCsvToExcel"
      }
    },
    "/V1042_ConvertJsonToXml": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1042_ConvertJsonToXml",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1042_ConvertJsonToXml",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1042_ConvertJsonToXml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1042_ConvertJsonToXml"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to XML",
        "description": "Convert a JSON to an XML - https://converter.power2apps.com/1000_fileConversions/V1042_ConvertJsonToXml"
      }
    },
    "/V1052_ConvertXmlToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1052_ConvertXmlToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1052_ConvertXmlToJson",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1052_ConvertXmlToJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1052_ConvertXmlToJson"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert XML to JSON",
        "description": "Convert an XML to a JSON - https://converter.power2apps.com/1000_fileConversions/V1052_ConvertXmlToJson"
      }
    },
    "/V1062_ConvertJsonToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1062_ConvertJsonToExcel",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestJsonToExcelData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1062_ConvertJsonToExcel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1062_ConvertJsonToExcel"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to Excel File",
        "description": "Convert a JSON to an Excel file (XLSX) - https://converter.power2apps.com/1000_fileConversions/V1062_ConvertJsonToExcel"
      }
    },
    "/V1071_ConvertYamlToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1071_ConvertYamlToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1071_YamlToJson",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1071_ConvertYamlToJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1071_ConvertYamlToJson"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert YAML to JSON",
        "description": "Convert a YAML to a JSON - https://converter.power2apps.com/1000_fileConversions/V1071_ConvertYamlToJson"
      }
    },
    "/V1081_ConvertJsonToYaml": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1081_ConvertJsonToYaml",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1081_ConvertJsonToYaml",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1081_ConvertJsonToYaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1081_ConvertJsonToYaml"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to YAML",
        "description": "Convert a JSON to a YAML - https://converter.power2apps.com/1000_fileConversions/V1081_ConvertJsonToYaml"
      }
    },
    "/V1090_ConvertJsonToTextTable": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1090_ConvertJsonToTextTable",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1090_ConvertJsonToTextTable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1090_ConvertJsonToTextTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1090_ConvertJsonToTextTable"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to Text-based Table",
        "description": "Convert JSON to Plain Text Table - https://converter.power2apps.com/1000_fileConversions/V1090_ConvertJsonToTextTable"
      }
    },
    "/V1100_ConvertExcelToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V1100_ConvertExcelToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV1100_ConvertExcelToJson",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV1100_ConvertExcelToJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV1100_ConvertExcelToJson"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert Excel File to JSON",
        "description": "Reads data from an Excel file and converts it to JSON format - https://converter.power2apps.com/1000_fileConversions/V1100_ConvertExcelToJson"
      }
    },
    "/V2011_RegularExpression": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2011_RegularExpression",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2011_RegularExpression",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2011_RegularExpression"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2011_RegularExpression"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Regular Expression (RegEx)",
        "description": "Searches the specified input string for all occurrences of a specified .NET regular expression (RegEx), using the specified matching options. - https://converter.power2apps.com/2000_dataHandling/V2011_RegularExpression"
      }
    },
    "/V2021_IbanData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2021_IbanData",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2021_IbanData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2021_IbanData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2021_IbanData"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Information from IBAN",
        "description": "Get the bank account details like account number, bank name, bank address and SWIFT code from International Bank Account Number (IBAN) - https://converter.power2apps.com/2000_dataHandling/V2021_IbanData"
      }
    },
    "/V2031_UrlToFile": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2031_UrlToFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2031_UrlToFile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2031_UrlToFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2031_UrlToFile"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Get File from URL",
        "description": "Get a file (PDF, JPG, JPEG, PNG, CSV, ...) from an URL - https://converter.power2apps.com/2000_dataHandling/V2031_UrlToFile"
      }
    },
    "/V2041_Translate": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2041_Translate",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2041_Translate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2041_Translate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2041_Translate"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Translate Text",
        "description": "Translate a word or sentence - https://converter.power2apps.com/2000_dataHandling/V2041_Translate"
      }
    },
    "/V2051_SortJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2051_SortJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2051_SortJson",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2051_SortJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2051_SortJson"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Sort JSON",
        "description": "Sort a JSON object, list or array - https://converter.power2apps.com/2000_dataHandling/V2051_SortJson"
      }
    },
    "/V2061_SortCsv": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2061_SortCsv",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2061_SortCsv",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2061_SortCsv"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2061_SortCsv"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Sort CSV",
        "description": "Sort a CSV - https://converter.power2apps.com/2000_dataHandling/V2061_SortCsv"
      }
    },
    "/V2071_ConvertColor": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2071_ConvertColor",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2071_ConvertColor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2071_ConvertColor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2071_ConvertColor"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert Colors to any Color Code",
        "description": "Convert a color (RGB, HEX, HSL, CMYK, HSV, XYZ, YIQ, YUV, Color name) to different color types (RGB, HEX, HSL, CMYK, HSV, XYZ, YIQ, YUV) - https://converter.power2apps.com/2000_dataHandling/V2071_ConvertColor"
      }
    },
    "/V2081_CombineCsvs": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2081_CombineCsvs",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2081_CombineCsvs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2081_CombineCsvs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2081_CombineCsvs"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Combine CSVs",
        "description": "Combine (aka merge, concate or join) CSV tables - https://converter.power2apps.com/2000_dataHandling/V2081_CombineCsvs"
      }
    },
    "/V2091_CombineJsonArrays": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2091_CombineJsonArrays",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2091_CombineJsonArrays",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2091_CombineJsonArrays"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2091_CombineJsonArrays"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Combine JSON Arrays",
        "description": "Combine (aka merge, concate or join) JSON lists - https://converter.power2apps.com/2000_dataHandling/V2091_CombineJsonArrays"
      }
    },
    "/V2100_ExtractJsonObjectProperties": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2100_ExtractJsonObjectProperties",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2100_ExtractJsonObjectProperties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2100_ExtractJsonObjectProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2100_ExtractJsonObjectProperties"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract JSON Object Properties (Headers)",
        "description": "Extracts property names from a JSON object string and returns them as a list - https://converter.power2apps.com/2000_dataHandling/V2100_ExtractJsonObjectProperties"
      }
    },
    "/V2110_ReplaceTextWithPattern": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2110_ReplaceTextWithPattern",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2110_ReplaceTextWithPattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2110_ReplaceTextWithPattern"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2110_ReplaceTextWithPattern"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Replace Text With Pattern",
        "description": "Replaces parts of a text based on a pattern using regular expressions (RegEx) - https://converter.power2apps.com/2000_dataHandling/V2110_ReplaceTextWithPattern"
      }
    },
    "/V2120_PatternMatchCheck": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2120_PatternMatchCheck",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2120_PatternMatchCheck",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2120_PatternMatchCheck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2120_MatchPatternCheck"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Pattern Match Check",
        "description": "Verify if text matches a given pattern using Regex - https://converter.power2apps.com/2000_dataHandling/V2120_PatternMatchCheck"
      }
    },
    "/V2130_SmartTextSplit": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2130_SmartTextSplit",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2130_SmartTextSplit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2130_SmartTextSplit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2130_SmartTextSplit"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Smart Text Split",
        "description": "Divide text into segments based on patterns using Regex - https://converter.power2apps.com/2000_dataHandling/V2130_SmartTextSplit"
      }
    },
    "/V2140_ExtractTextAccordingToPattern": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2140_ExtractTextAccordingToPattern",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2140_ExtractTextAccordingToPattern",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2140_ExtractTextAccordingToPattern"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2140_ExtractTextAccordingToPattern"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Text According to Pattern",
        "description": "Find and retrieve specific parts of text based on patterns using Regex - https://converter.power2apps.com/2000_dataHandling/V2130_SmartTextSplit"
      }
    },
    "/V2150_ExecuteJavaScript": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V2150_ExecuteJavaScript",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV2150_ExecuteJavaScript",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV2150_ExecuteJavaScript"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV2150_ExecuteJavaScript"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Run JavaScript Code",
        "description": "Executes user-defined JavaScript code in Power Automate - https://converter.power2apps.com/2000_dataHandling/V2150_ExecuteJavaScript"
      }
    },
    "/V3012_ConvertImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3012_ConvertImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3012_ConvertImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3012_ConvertImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert Image to another Image Format",
        "description": "Convert a common (JPEG, JPG, PNG, BMP, GIF, TIFF, SVG, ..) image to another format (JPEG, JPG, PNG, BMP, GIF, TIFF) - https://converter.power2apps.com/3000_imagesBarcodes/V3012_ConvertImage"
      }
    },
    "/V3022_ResizeImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3022_ResizeImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3022_ResizeImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3022_ResizeImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3022_ResizeImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Resize Image",
        "description": "Adjust the width and height of an image (JPEG, JPG, PNG, BMP, GIF, TIFF) - https://converter.power2apps.com/3000_imagesBarcodes/V3022_ResizeImage"
      }
    },
    "/V3031_RotateImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3031_RotateImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3031_RotateImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3031_RotateImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3031_RotateImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Rotate Image",
        "description": "Rotate an image (JPEG, JPG, PNG, BMP, GIF, TIFF) by an angle (degree) of your choice - https://converter.power2apps.com/3000_imagesBarcodes/V3031_RotateImage"
      }
    },
    "/V3041_CompressImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3041_CompressImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestCompressImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3041_CompressImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3041_CompressImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Compress JPG Image",
        "description": "Compress a JPG (JPEG) image - https://converter.power2apps.com/3000_imagesBarcodes/V3041_CompressImage"
      }
    },
    "/V3051_ReadCode": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3051_ReadCode",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestReadCodeData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3051_ReadCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3051_ReadCode"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Read QR or Barcode",
        "description": "Read a QR code or Barcode from an image - https://converter.power2apps.com/3000_imagesBarcodes/V3051_ReadCode"
      }
    },
    "/V3062_CreateCode": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3062_CreateCode",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3062_CreateCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3062_CreateCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3062_CreateCode"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create QR or Barcode",
        "description": "Create a QR code or a Barcode from a string - https://converter.power2apps.com/3000_imagesBarcodes/V3062_CreateCode"
      }
    },
    "/V3071_ImageMetaData": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3071_ImageMetaData",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3071_ImageMetaData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3071_ImageMetaData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3071_ImageMetaData"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Information from Image",
        "description": "Get the metadata information from an image (JPEG, JPG, PNG, BMP, GIF, TIFF, ...) - https://converter.power2apps.com/3000_imagesBarcodes/V3071_ImageMetaData"
      }
    },
    "/V3081_CreateWatermarkImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3081_CreateWatermarkImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3081_CreateWatermarkImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3081_CreateWatermarkImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3081_CreateWatermarkImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create Watermark Image",
        "description": "Overlap an image (JPEG, JPG, PNG, BMP, GIF, TIFF) by another image - https://converter.power2apps.com/3000_imagesBarcodes/V3081_CreateWatermarkImage"
      }
    },
    "/V3091_CreateChartImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3091_CreateChartImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3091_CreateChartImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3091_CreateChartImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3091_CreateChartImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create Chart Image from Table",
        "description": "Convert a table (JSON or CSV) into a visual chart (pie, bar, line, ...) - https://converter.power2apps.com/3000_imagesBarcodes/V3091_CreateChartImage"
      }
    },
    "/V3101_CreateTableImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3101_CreateTableImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3101_CreateTableImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3101_CreateTableImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3101_CreateTableImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create Table Image from Table Data",
        "description": "Convert table data (JSON or CSV) into a visual table formatted as a picture - https://converter.power2apps.com/3000_imagesBarcodes/V3101_CreateTableImage"
      }
    },
    "/V3111_CreateGraphImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V3111_CreateGraphImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV3111_CreateGraphImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV3111_CreateGraphImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV3111_CreateGraphImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create Graph Image",
        "description": "Convert Graph Description Language (DOT) into visual diagrams or charts with Graphviz - https://converter.power2apps.com/3000_imagesBarcodes/V3111_CreateGraphImage"
      }
    },
    "/V4012_ConvertFileToPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V4012_ConvertFileToPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV4012_FileToPdf",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV4012_FileToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV4012_ConvertFileToPdf"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert File (DOCX, PPTX, XLSX, HTML, ...) to PDF",
        "description": "Convert a document file (Word, Powerpoint, Excel, ..) to a PDF file - https://converter.power2apps.com/4000_pdf/V4012_ConvertFileToPdf"
      }
    },
    "/V4021_MergePdfs": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V4021_MergePdfs",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV4021_MergePdfs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV4021_MergePdfs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV4021_MergePdfs"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Merge PDF Files",
        "description": "Merge two PDF files into one PDF file - https://converter.power2apps.com/4000_pdf/V4021_MergePdfs"
      }
    },
    "/V4031_PdfMetadata": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V4031_PdfMetadata",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV4031_PdfMetadata",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV4031_PdfMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV4031_PdfMetadata"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Information from PDF",
        "description": "Get the metadata of a PDF - https://converter.power2apps.com/4000_pdf/V4031_PdfMetadata"
      }
    },
    "/V4041_ProtectPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V4041_ProtectPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV4041_ProtectPdf",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV4041_ProtectPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV4041_ProtectPdf"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Protect PDF",
        "description": "Protect a PDF with a password - https://converter.power2apps.com/4000_pdf/V4041_ProtectPdf"
      }
    },
    "/V4051_UnProtectPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V4051_UnProtectPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV4051_UnProtectPdf",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV4051_UnProtectPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV4051_UnProtectPdf"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Unprotect PDF",
        "description": "Remove the protection from a pdf - https://converter.power2apps.com/4000_pdf/V4051_UnProtectPdf"
      }
    },
    "/V5011_CreateWordFile": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5011_CreateWordFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5011_CreateWordFile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5011_CreateWordFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5011_CreateWordFile"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Create Word File",
        "description": "Create a Word file (DOCX) with multiple text sections or add multiple text sections to a Word file (DOCX) - https://converter.power2apps.com/5000_word/V5011_CreateWordFile"
      }
    },
    "/V5021_ExtractWordBookmarks": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5021_ExtractWordBookmarks",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5021_ExtractWordBookmarks",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5021_ExtractWordBookmarks"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5021_ExtractWordBookmarks"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Bookmarks from Word File",
        "description": "Extract all bookmarks from a Word file (DOCX) and get them as a list - https://converter.power2apps.com/5000_word/V5021_ExtractWordBookmarks"
      }
    },
    "/V5031_AddImageToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5031_AddImageToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5031_AddImageToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5031_AddImageToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5031_AddImageToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File",
        "description": "Add Image to a Word file (DOCX) or create a new Word file (DOCX) with image - https://converter.power2apps.com/5000_word/V5031_AddImageToWord"
      }
    },
    "/V5042_AddImageWithinTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5042_AddImageWithinTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5042_AddImageWithinTableToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5042_AddImageWithinTableToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5042_AddImageWithinTableToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Image to Word File within Table",
        "description": "Add an image to a Word file (DOCX) within a table or create a new Word file (DOCX) with an image within a table - https://converter.power2apps.com/5000_word/V5042_AddImageWithinTableToWord"
      }
    },
    "/V5052_AddTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5052_AddTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5052_AddTableToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5052_AddTableToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5052_AddTableToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Table to Word File",
        "description": "Add Table to a Word file (DOCX) or create a new Word file (DOCX) with a table - https://converter.power2apps.com/5000_word/V5052_AddTableToWord"
      }
    },
    "/V5061_AddTextToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5061_AddTextToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestAddTextToWordData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5061_AddTextToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5061_AddTextToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add Text to Word File",
        "description": "Add a text to a Word file (DOCX) or create a new Word file (DOCX) with a text - https://converter.power2apps.com/5000_word/V5061_AddTextToWord"
      }
    },
    "/V5071_InsertTextToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5071_InsertTextToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5071_InsertTextToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5071_InsertTextToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5071_InsertTextToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert Text to Word File",
        "description": "Insert a text to a Word file (DOCX) - https://converter.power2apps.com/5000_word/V5071_InsertTextToWord"
      }
    },
    "/V5081_InsertImageToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5081_InsertImageToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5081_InsertImageToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5081_InsertImageToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert Image to Word File",
        "description": "Insert Image to a Word file (DOCX) - https://converter.power2apps.com/5000_word/V5081_InsertImageToWord"
      }
    },
    "/V5091_InsertTableToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5091_InsertTableToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5091_InsertTableToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5091_InsertTableToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5091_InsertTableToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert Table to Word File",
        "description": "Insert Table to a Word file (DOCX - https://converter.power2apps.com/5000_word/V5091_InsertTableToWord"
      }
    },
    "/V5101_AddHtmlToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5101_AddHtmlToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5101_AddHtmlToWord",
            "schema": {
              "$ref": "#/definitions/DtoRequestV5101_AddHtmlToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5101_AddHtmlToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Add HTML to Word File",
        "description": "Add HTML to a Word file (DOCX) or create a new Word file (DOCX) with HTML - https://converter.power2apps.com/5000_word/V5101_AddHtmlToWord"
      }
    },
    "/V5110_InsertMultipleTextSectionsToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5110_InsertMultipleTextSectionsToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5110_InsertMultipleTextSectionsToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5110_InsertMultipleTextSectionsToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5110_InsertMultipleTextSectionsToWord"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert multiple Text Sections to Word File",
        "description": "Insert multiple text blocks to a Word file (DOCX) - https://converter.power2apps.com/5000_word/V5110_InsertMultipleTextSectionsToWord"
      }
    },
    "/V5120_ExtractWordContentControls": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5120_ExtractWordContentControls",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5120_ExtractWordContentControls",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5120_ExtractWordContentControls"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5120_ExtractWordContentControls"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract Content Controls from Word File",
        "description": "Extracts form or content controls (e.g., text fields, checkboxes, dropdowns) from a Word document (DOCX) and returns their values and properties as a list - https://converter.power2apps.com/5000_word/V5120_ExtractWordContentControls"
      }
    },
    "/V5130_UpdateWordTableOfContents": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5130_UpdateWordTableOfContents",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5130_UpdateWordTableOfContents",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5130_UpdateWordTableOfContents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV5130_UpdateWordTableOfContents"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Update Word Table of Contents",
        "description": "Updates the Word table of contents - https://converter.power2apps.com/5000_word/V5130_UpdateWordTableOfContents"
      }
    },
    "/V5140_UpdateWordContentControl": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V5140_UpdateWordContentControl",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV5140_UpdateWordContentControl",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV5140_UpdateWordContentControl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Update Word Content Control",
        "description": "Updates a Word content control or form element - https://converter.power2apps.com/5000_word/V5140_UpdateWordContentControl"
      }
    },
    "/V6011_ConvertSharePointSearchResults": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V6011_ConvertSharePointSearchResults",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV6011_ConvertSharePointSearchResults",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV6011_ConvertSharePointSearchResults"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV6011_ConvertSharePointSearchResults"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Extract results from Send HTTP request to SharePoint search",
        "description": "Extract results from the action 'Send HTTP request to SharePoint' search - https://converter.power2apps.com/6000_SharePoint/V6011_ConvertSharePointSearchResults"
      }
    },
    "/V7012_ConvertHtmlTableToJson": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7012_ConvertHtmlTableToJson",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestHtmlToTableData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7012_ConvertHtmlTableToJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV7012_ConvertHtmlTableToJson"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML Table to JSON",
        "description": "Convert an HTML table to a JSON or extract the first HTML table from an URL and convert it to a JSON - https://converter.power2apps.com/7000_html/V7012_ConvertHtmlTableToJson"
      }
    },
    "/V7022_ConvertHtmlToPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7022_ConvertHtmlToPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV7022_ConvertHtmlToPdf",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7022_ConvertHtmlToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV7022_ConvertHtmlToPdf"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML or URL to PDF",
        "description": "Convert an HTML to a PDF or convert an URL containing HTML to a PDF - https://converter.power2apps.com/7000_html/V7022_ConvertHtmlToPdf"
      }
    },
    "/V7031_ConvertHtmlToImage": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7031_ConvertHtmlToImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV7031_ConvertHtmlToImage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7031_ConvertHtmlToImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV7031_ConvertHtmlToImage"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML or URL to JPG Image",
        "description": "Convert an HTML to an JPG (JPEG) Image or convert an URL containing HTML to an JPG (JPEG) Image - https://converter.power2apps.com/7000_html/V7031_ConvertHtmlToImage"
      }
    },
    "/V7041_ConvertHtmlToWord": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7041_ConvertHtmlToWord",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV7041_ConvertHtmlToWord",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7041_ConvertHtmlToWord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML to Word File",
        "description": "Convert HTML to a Word file (DOCX) - https://converter.power2apps.com/7000_html/V7041_ConvertHtmlToWord"
      }
    },
    "/V7051_ConvertJsonToHtmlTable": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7051_ConvertJsonToHtmlTable",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV7051_ConvertJsonToHtmlTable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7051_ConvertJsonToHtmlTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtml"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert JSON to HTML Table",
        "description": "Convert a JSON to a HTML table - https://converter.power2apps.com/7000_html/V7051_ConvertJsonToHtmlTable"
      }
    },
    "/V7061_ConvertCsvToHtmlTable": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7061_ConvertCsvToHtmlTable",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV7061_ConvertCsvToHtmlTable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7061_ConvertCsvToHtmlTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseHtml"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert CSV to HTML Table",
        "description": "Convert a CSV to a HTML table - https://converter.power2apps.com/7000_html/V7061_ConvertCsvToHtmlTable"
      }
    },
    "/V7070_ConvertHtmlTableToCsv": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7070_ConvertHtmlTableToCsv",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV7070_ConvertHtmlTableToCsv",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7070_ConvertHtmlTableToCsv"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV7070_ConvertHtmlTableToCsv"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML Table to CSV",
        "description": "Convert an HTML table to a CSV or extract the first HTML table from an URL and convert it to a CSV - https://converter.power2apps.com/7000_html/V7070_ConvertHtmlTableToCsv"
      }
    },
    "/V7080_ConvertHtmlTableToExcel": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V7080_ConvertHtmlTableToExcel",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV7080_ConvertHtmlTableToExcel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV7080_ConvertHtmlTableToExcel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV7080_ConvertHtmlTableToExcel"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert HTML Table to Excel File",
        "description": "Convert an HTML table to a Excel (XLSX) or extract the first HTML table from an URL and convert it to a Excel - https://converter.power2apps.com/7000_html/V7080_ConvertHtmlTableToExcel"
      }
    },
    "/V8010_ConvertXRechnungToPdf": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V8010_ConvertXRechnungToPdf",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestV8010_ConvertXRechnungToPdf",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV8010_ConvertXRechnungToPdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseV8010_ConvertXRechnungToPdf"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Convert XRechnung to PDF",
        "description": "Convert a XRechnung to a PDF - https://converter.power2apps.com/8000_XRechnung/V8010_ConvertXRechnungToPdf"
      }
    },
    "/V9010_InsertTextToPowerPoint": {
      "post": {
        "tags": [
          "Converter"
        ],
        "operationId": "V9010_InsertTextToPowerPoint",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtoRequestIV9010_InsertTextToPowerPoint",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DtoRequestV9010_InsertTextToPowerPoint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DtoResponseFile"
            }
          }
        },
        "x-ms-visibility": "important",
        "summary": "Insert Text to PowerPoint File",
        "description": "Insert a text to a PowerPoint file (PPTX) - https://converter.power2apps.com/9000_powerpoint/V9010_InsertTextToPowerPoint"
      }
    }
  },
  "definitions": {
    "BankingAccountData": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is Valid",
          "description": "Is Valid"
        },
        "isSepaCountry": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is Valid SEPA Country",
          "description": "Is Valid Single Euro Payment Areas (SEPA) Country"
        },
        "countryCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Country Code",
          "description": "Country Code"
        },
        "bban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "BBAN",
          "description": "Basic Bank Account Number (BBAN)"
        },
        "bankCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Code",
          "description": "Bank Code"
        },
        "branchCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Branch Code",
          "description": "Branch Code"
        },
        "accountNumber": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Account Number",
          "description": "Account Number"
        },
        "formattedIban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Formatted IBAN",
          "description": "Formatted International Bank Account Number (IBAN)"
        },
        "unformattedIban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unformatted IBAN",
          "description": "Unformatted International Bank Account Number (IBAN)"
        },
        "swift_code": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SWIFT Code",
          "description": "SWIFT Code / BIC"
        },
        "bank_name": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Name",
          "description": "Bank Name"
        },
        "bank_city": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank City",
          "description": "Bank City"
        },
        "bank_zip": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank ZIP",
          "description": "Bank ZIP"
        },
        "bank_adress": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Address",
          "description": "Bank Address"
        }
      },
      "additionalProperties": false
    },
    "CodeResponse": {
      "type": "object",
      "properties": {
        "codeValue": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code value",
          "description": "Code value"
        },
        "codeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code type",
          "description": "Code type"
        }
      },
      "additionalProperties": false
    },
    "CsvData": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        }
      },
      "additionalProperties": false
    },
    "CsvResponse": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV response",
          "description": "CSV response"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestChartData": {
      "required": [
        "chart"
      ],
      "type": "object",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Width",
          "description": "Width of the image in pixels. Default = 500"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Height",
          "description": "Height of the image in pixels. Default = 500"
        },
        "devicePixelRatio": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Device Pixel Ratio",
          "description": "Device pixel ratio of the image. Default = 1.0"
        },
        "backgroundColor": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Background Color",
          "description": "Background color in RGB, HEX, HSL or color name. Default = 'transparent'"
        },
        "format": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of the created image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "version": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Version",
          "description": "Version"
        },
        "chart": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table Data",
          "description": "Chart or table (JSON or CSV) that will be used to create the chart image."
        },
        "type": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Chart Type",
          "description": "Chart type of the generated image. Default = 'Bar'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartTypes",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestChartGraphData": {
      "required": [
        "graph"
      ],
      "type": "object",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Width",
          "description": "Width of the image in pixels. Default = 500"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Height",
          "description": "Height of the image in pixels. Default = 500"
        },
        "devicePixelRatio": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Device Pixel Ratio",
          "description": "Device pixel ratio of the image. Default = 1.0"
        },
        "backgroundColor": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Background Color",
          "description": "Background color in RGB, HEX, HSL or color name. Default = 'transparent'"
        },
        "format": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of the created image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "version": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Version",
          "description": "Version"
        },
        "graph": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Graph data",
          "description": "Graph data in syntax of the Graph Description Language (DOT)"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestChartTableData": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Width",
          "description": "Width of the image in pixels. Default = 500"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Height",
          "description": "Height of the image in pixels. Default = 500"
        },
        "devicePixelRatio": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Device Pixel Ratio",
          "description": "Device pixel ratio of the image. Default = 1.0"
        },
        "backgroundColor": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Background Color",
          "description": "Background color in RGB, HEX, HSL or color name. Default = 'transparent'"
        },
        "format": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of the created image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "version": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Version",
          "description": "Version"
        },
        "data": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table data",
          "description": "Table data as JSON or CSV that will be used to create the chart image."
        },
        "title": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Title",
          "description": "Title of the image appears above the table image"
        },
        "hasLines": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table Lines?",
          "description": "Draw columns and rows with lines"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestColorData": {
      "required": [
        "color"
      ],
      "type": "object",
      "properties": {
        "color": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Color",
          "description": "Color that will be converted. e.g. rgb(120, 55, 66), hex 6400FF, red etc."
        }
      },
      "additionalProperties": false
    },
    "DtoRequestConvertImageFileData": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image File",
          "description": "Image file (JPEG, JPG, PNG, BMP, GIF, TIFF, SVG) to be converted"
        },
        "outFormat": {
          "default": "JPEG",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Output format",
          "description": "Output format in which the image is converted. Default = 'JPEG'",
          "x-ms-dynamic-values": {
            "operationId": "GetImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestCreateCodeData": {
      "required": [
        "content"
      ],
      "type": "object",
      "properties": {
        "content": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Content",
          "description": "Content of the generated code"
        },
        "codeFormat": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code Format",
          "description": "Choose a code type. Default = 'QR CODE'",
          "x-ms-dynamic-values": {
            "operationId": "GetCodeFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Width",
          "description": "Width of the QR or barcode. Default = 200"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Height",
          "description": "Height of the QR or barcode. Default = 200"
        },
        "outFormat": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of QR or barcode image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Embedded Image",
          "description": "Icon (picture or url) of an image embedded in the barcode. Default is empty"
        },
        "imageOpacity": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Embedded Image Opacity",
          "description": "Opacity (in %) of the embedded image. Default = 90"
        },
        "imageRatio": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Embedded Image Ratio",
          "description": "Ratio (in %) of the embedded image. Default = 20"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestCsvData": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        },
        "dataIncludesHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "CSV has Headers?",
          "description": "CSV has headers?"
        },
        "autoDiscoverFieldTypes": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Field Types?",
          "description": "Auto-detect field types?"
        },
        "maxScanRows": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Number of Rows for Field Type Detection",
          "description": "Number of rows for automatic field type detection. Default = 20"
        },
        "ignoreEmptyLine": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Empty Rows?",
          "description": "Remove empty rows"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Skip a Number of Rows",
          "description": "Skip a number of rows at beginning. Default = 0"
        },
        "skipLast": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Stop at a specific Row",
          "description": "Stop at a specific row number. Default = convert all rows"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Field separator (delimiter). Default = 'Auto-detect separator'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "mayHaveQuotedFields": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Quote Delimiter?",
          "description": "Auto-detect quote delimiter?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestHtmlToPdfData": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML content that will be used to create the PDF file"
        },
        "isLandscape": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Landscape Format?",
          "description": "Is the PDF to be created in landscape format? Default = false"
        },
        "imageQuality": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Quality of Image Content",
          "description": "Maximum image quality (in pixels) for the included images. Default = 800"
        },
        "footerOption": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Footer Options",
          "description": "Display options in the document footer. Nothing displayed by default",
          "x-ms-dynamic-values": {
            "operationId": "GetFooterOptions",
            "value-path": "value",
            "value-title": "name",
            "parameters": { }
          }
        },
        "headerOption": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Header Options",
          "description": "Display options in the document header. Nothing displayed by default",
          "x-ms-dynamic-values": {
            "operationId": "GetHeaderOptions",
            "value-path": "value",
            "value-title": "name",
            "parameters": { }
          }
        },
        "paperFormat": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Paper Format",
          "description": "Defines the paper format, e.g. A3, A5, Letter, etc. Default = 'A4'",
          "x-ms-dynamic-values": {
            "operationId": "GetPaperFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "marginTop": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Top margin",
          "description": "Defines the top margin (in pixels) of the PDF. Default = 20"
        },
        "marginBottom": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bottom margin",
          "description": "Defines the bottom margin (in pixels) of the PDF. Default = 20"
        },
        "marginLeft": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Left margin",
          "description": "Defines the left margin (in pixels) of the PDF. Default = 10"
        },
        "marginRight": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Right margin",
          "description": "Defines the right margin (in pixels) of the PDF. Default = 20"
        },
        "pageRanges": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Page Ranges",
          "description": "Defines which pages are to be printed, e.g. 1-3,5 etc. All pages by default"
        },
        "scale": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Scale",
          "description": "Defines the scaling factor of the page content. Default = 1"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestHtmlWordData": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML content that will be used to create the Word file"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestJoinCsvData": {
      "required": [
        "mainCsv",
        "mainCsvColumn",
        "secondCsv"
      ],
      "type": "object",
      "properties": {
        "mainCsv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Main CSV",
          "description": "Main CSV which has to be supplemented with the data from the 'Second CSV'"
        },
        "mainCsvColumn": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Join Column Name",
          "description": "Join using the column name common to both tables"
        },
        "secondCsv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Second CSV",
          "description": "Second table contains the data to be joined"
        },
        "secondCsvColumn": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Second CSV Column",
          "description": "If different to 'Join Column Name'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestJoinJsonData": {
      "required": [
        "mainJson",
        "mainJsonProperty",
        "secondJson"
      ],
      "type": "object",
      "properties": {
        "mainJson": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Main JSON",
          "description": "Main JSON which has to be supplemented with the data from the 'Second JSON'"
        },
        "mainJsonProperty": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Join Property Name",
          "description": "Join using the property name common to both JSONs"
        },
        "secondJson": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Second JSON",
          "description": "Second JSON contains the data to be joined"
        },
        "secondJsonProperty": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Second JSON Property",
          "description": "If different to 'Join Property Name'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestJsonData": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestSortCsvData": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        },
        "dataIncludesHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "CSV has Headers?",
          "description": "CSV has headers?"
        },
        "autoDiscoverFieldTypes": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Field Types?",
          "description": "Auto-detect field types?"
        },
        "maxScanRows": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Number of Rows for Field Type Detection",
          "description": "Number of rows for automatic field type detection. Default = 20"
        },
        "ignoreEmptyLine": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Empty Rows?",
          "description": "Remove empty rows"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Skip a Number of Rows",
          "description": "Skip a number of rows at beginning. Default = 0"
        },
        "skipLast": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Stop at a specific Row",
          "description": "Stop at a specific row number. Default = convert all rows"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Field separator (delimiter). Default = 'Auto-detect separator'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "mayHaveQuotedFields": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Quote Delimiter?",
          "description": "Auto-detect quote delimiter?"
        },
        "sortColumn": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Sort column?",
          "description": "Column to sort by?"
        },
        "secondSortColumn": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Further sorting column?",
          "description": "Further column to sort by?"
        },
        "isReverse": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Reverse order?",
          "description": "Reverse order?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestSortJsonData": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON object, list or array that will be sorted"
        },
        "sortProperty": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Sort property?",
          "description": "Property to sort by?"
        },
        "secondSortProperty": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Further sorting property?",
          "description": "Further property to sort by?"
        },
        "isReverse": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Reverse order?",
          "description": "Reverse order?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1013_ConvertJsonToCsv": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Separator (delimiter) of the fields. Default = ';'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1022_ConvertCsvToJson": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        },
        "dataIncludesHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "CSV has Headers?",
          "description": "CSV has headers?"
        },
        "autoDiscoverFieldTypes": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Field Types?",
          "description": "Auto-detect field types?"
        },
        "maxScanRows": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Number of Rows for Field Type Detection",
          "description": "Number of rows for automatic field type detection. Default = 20"
        },
        "ignoreEmptyLine": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Empty Rows?",
          "description": "Remove empty rows"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Skip a Number of Rows",
          "description": "Skip a number of rows at beginning. Default = 0"
        },
        "skipLast": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Stop at a specific Row",
          "description": "Stop at a specific row number. Default = convert all rows"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Field separator (delimiter). Default = 'Auto-detect separator'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "mayHaveQuotedFields": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Quote Delimiter?",
          "description": "Auto-detect quote delimiter?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1032_ConvertCsvToExcel": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        },
        "dataIncludesHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "CSV has Headers?",
          "description": "CSV has headers?"
        },
        "autoDiscoverFieldTypes": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Field Types?",
          "description": "Auto-detect field types?"
        },
        "maxScanRows": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Number of Rows for Field Type Detection",
          "description": "Number of rows for automatic field type detection. Default = 20"
        },
        "ignoreEmptyLine": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Empty Rows?",
          "description": "Remove empty rows"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Skip a Number of Rows",
          "description": "Skip a number of rows at beginning. Default = 0"
        },
        "skipLast": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Stop at a specific Row",
          "description": "Stop at a specific row number. Default = convert all rows"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Field separator (delimiter). Default = 'Auto-detect separator'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "mayHaveQuotedFields": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Quote Delimiter?",
          "description": "Auto-detect quote delimiter?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1042_ConvertJsonToXml": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1052_ConvertXmlToJson": {
      "required": [
        "xml"
      ],
      "type": "object",
      "properties": {
        "xml": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XML",
          "description": "XML"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1062_ConvertJsonToExcel": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        },
        "allInOneTable": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "All in one Table?",
          "description": "All in one table?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1071_ConvertYamlToJson": {
      "required": [
        "yaml"
      ],
      "type": "object",
      "properties": {
        "yaml": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YAML",
          "description": "YAML"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1081_ConvertJsonToYaml": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1090_ConvertJsonToTextTable": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV1100_ConvertExcelToJson": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Excel File",
          "description": "Excel file"
        },
        "hasHeaders": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Excel has Headers?",
          "description": "Excel has headers?"
        },
        "startCell": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Start Cell",
          "description": "Cell where to start. Default = 'A1'"
        },
        "sheetName": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Sheet Name",
          "description": "Sheet to be converted. The first sheet is used, if nothing is specified"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2011_RegularExpression": {
      "required": [
        "input"
      ],
      "type": "object",
      "properties": {
        "input": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text to match",
          "description": "The string to search for a match"
        },
        "pattern": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular Expression",
          "description": "The .NET regular expression pattern to match"
        },
        "option": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular expression option",
          "description": "Select regular expression option",
          "x-ms-dynamic-values": {
            "operationId": "GetRegexOptions",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2021_IbanData": {
      "required": [
        "iban"
      ],
      "type": "object",
      "properties": {
        "iban": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "IBAN",
          "description": "IBAN"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2031_UrlToFile": {
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "URL",
          "description": "URL"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2041_Translate": {
      "required": [
        "text",
        "to"
      ],
      "type": "object",
      "properties": {
        "text": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Text in the source language that should be translated"
        },
        "from": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "From",
          "description": "Source language. Default is auto detection",
          "x-ms-dynamic-values": {
            "operationId": "GetLanguages",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "to": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "To",
          "description": "Target language",
          "x-ms-dynamic-values": {
            "operationId": "GetLanguages",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2051_SortJson": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON object, list or array that will be sorted"
        },
        "sortProperty": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Sort property",
          "description": "Property to sort by. Keep existing sort order by default"
        },
        "secondSortProperty": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Further sorting property",
          "description": "Further property to sort by. Blank by default"
        },
        "isReverse": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Reverse order?",
          "description": "Reverse order?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2061_SortCsv": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        },
        "dataIncludesHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "CSV has Headers?",
          "description": "CSV has headers?"
        },
        "autoDiscoverFieldTypes": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Field Types?",
          "description": "Auto-detect field types?"
        },
        "maxScanRows": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Number of Rows for Field Type Detection",
          "description": "Number of rows for automatic field type detection. Default = 20"
        },
        "ignoreEmptyLine": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Empty Rows?",
          "description": "Remove empty rows"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Skip a Number of Rows",
          "description": "Skip a number of rows at beginning. Default = 0"
        },
        "skipLast": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Stop at a specific Row",
          "description": "Stop at a specific row number. Default = convert all rows"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Field separator (delimiter). Default = 'Auto-detect separator'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "mayHaveQuotedFields": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Quote Delimiter?",
          "description": "Auto-detect quote delimiter?"
        },
        "sortColumn": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Sort column",
          "description": "Column to sort by. Keep existing sort order by default"
        },
        "secondSortColumn": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Further sorting column",
          "description": "Further column to sort by. Blank by default"
        },
        "isReverse": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Reverse order?",
          "description": "Reverse order?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2071_ConvertColor": {
      "required": [
        "color"
      ],
      "type": "object",
      "properties": {
        "color": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Color",
          "description": "Color that will be converted. e.g. rgb(120, 55, 66), hex 6400FF, red etc."
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2081_CombineCsvs": {
      "required": [
        "mainCsv",
        "mainCsvColumn",
        "secondCsv"
      ],
      "type": "object",
      "properties": {
        "mainCsv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Main CSV",
          "description": "Main CSV which has to be supplemented with the data from the 'Second CSV'"
        },
        "mainCsvColumn": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Combine Column Name",
          "description": "Column name used for combining data sets"
        },
        "secondCsv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Second CSV",
          "description": "Second table contains the data to be joined"
        },
        "secondCsvColumn": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Second CSV Column",
          "description": "If different to 'Combine Column Name'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2091_CombineJsonArrays": {
      "required": [
        "mainJson",
        "mainJsonProperty",
        "secondJson"
      ],
      "type": "object",
      "properties": {
        "mainJson": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Main JSON",
          "description": "Main JSON which has to be supplemented with the data from the 'Second JSON'"
        },
        "mainJsonProperty": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Combine Property Name",
          "description": "Property name used for combining data sets"
        },
        "secondJson": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Second JSON",
          "description": "Second JSON contains the data to be joined"
        },
        "secondJsonProperty": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Second JSON Property",
          "description": "If different to 'Combine Property Name'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2100_ExtractJsonObjectProperties": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        },
        "nestedPropertyExtraction": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extract nested properties",
          "description": "Extract nested properties"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2110_ReplaceTextWithPattern": {
      "required": [
        "inputText",
        "searchPattern"
      ],
      "type": "object",
      "properties": {
        "inputText": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Input Text",
          "description": "Input Text"
        },
        "searchPattern": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Search Pattern",
          "description": "The pattern or text which should be replaced inside of the input text"
        },
        "replacementText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Replacement Text",
          "description": "Text which will be inserted instead of the search pattern into the input text"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2120_PatternMatchCheck": {
      "required": [
        "inputText",
        "matchPattern"
      ],
      "type": "object",
      "properties": {
        "inputText": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Input Text",
          "description": "Input Text"
        },
        "matchPattern": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Match Pattern",
          "description": "Pattern or text to check for occurrences in the input text"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2130_SmartTextSplit": {
      "required": [
        "inputText"
      ],
      "type": "object",
      "properties": {
        "inputText": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Input Text",
          "description": "Input text to be split up"
        },
        "splitPattern": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Split Pattern",
          "description": "Pattern or text as part of the Input Text where it will be splitted by"
        },
        "trimEnabled": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Trim enabled",
          "description": "Removes leading and trailing whitespace in all results. Default = 'No'"
        },
        "trimStrings": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Trim Strings",
          "description": "Removes leading and trailing substring in all results. Default is whitespace"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2140_ExtractTextAccordingToPattern": {
      "required": [
        "inputText",
        "matchPattern"
      ],
      "type": "object",
      "properties": {
        "inputText": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Text"
        },
        "matchPattern": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Match Pattern",
          "description": "Match Pattern"
        },
        "trimEnabled": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Trim enabled",
          "description": "Removes leading and trailing whitespace in all results"
        },
        "trimStrings": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Trim Strings",
          "description": "Removes leading and trailing substring in all results. Default is whitespace"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV2150_ExecuteJavaScript": {
      "required": [
        "code"
      ],
      "type": "object",
      "properties": {
        "code": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JavaScript Code",
          "description": "Run JS code; returns the last statement. E.g. to return 5: var x = 2+3; return x;"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3012_ConvertImage": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image File",
          "description": "Image file (JPEG, JPG, PNG, BMP, GIF, TIFF, SVG) to be converted"
        },
        "outFormat": {
          "default": "JPEG",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Output format",
          "description": "Output format in which the image is converted. Default = 'JPEG'",
          "x-ms-dynamic-values": {
            "operationId": "GetImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3022_ResizeImage": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image File",
          "description": "Image file to be resized"
        },
        "width": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image Width",
          "description": "The width (by default in pixels) of the image - empty for auto"
        },
        "height": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image Height",
          "description": "The height (by default in pixels) of the image - empty for auto"
        },
        "resizeBy": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Resize By",
          "description": "Resize by: Default in pixels",
          "x-ms-dynamic-values": {
            "operationId": "GetResizeOptions",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3031_RotateImage": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image File",
          "description": "Image file to be rotated"
        },
        "rotate": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Rotate",
          "description": "Degrees the image is rotated with"
        },
        "outFormat": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Output Format",
          "description": "Output format of the created image. Default = 'JPEG'",
          "x-ms-dynamic-values": {
            "operationId": "GetImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3041_CompressImage": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image File",
          "description": "Image file to be compressed"
        },
        "quality": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image Quality",
          "description": "The quality of the image (0-100). Default = 70"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3051_ReadCode": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "QR or Barcode",
          "description": "QR or Barcode Image"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3062_CreateCode": {
      "required": [
        "content"
      ],
      "type": "object",
      "properties": {
        "content": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Content",
          "description": "Content of the generated code"
        },
        "codeFormat": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code Format",
          "description": "Choose a code type. Default = 'QR CODE'",
          "x-ms-dynamic-values": {
            "operationId": "GetCodeFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Width",
          "description": "Width (in pixels) of the QR or barcode. Default = 200"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Height",
          "description": "Height (in pixels) of the QR or barcode. Default = 200"
        },
        "outFormat": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of QR or barcode image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Embedded Image",
          "description": "Icon (picture or url) of an image embedded in the barcode. Default is empty"
        },
        "imageOpacity": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Embedded Image Opacity",
          "description": "Opacity (in %) of the embedded image. Default = 90"
        },
        "imageRatio": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Embedded Image Ratio",
          "description": "Ratio (in %) of the embedded image. Default = 20"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3071_ImageMetaData": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image File",
          "description": "Image file"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3081_CreateWatermarkImage": {
      "required": [
        "image",
        "watermarkImage"
      ],
      "type": "object",
      "properties": {
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Main Image",
          "description": "Main image which is overlapped by the watermark image"
        },
        "watermarkImage": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Watermark Image",
          "description": "Watermark image which should overlap the main image"
        },
        "opacity": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Opacity",
          "description": "Opacity (in %) of the watermark image. Default = '25'"
        },
        "ratio": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Ratio",
          "description": "Ratio (in %) of the watermark image to the main image. Default = '25'"
        },
        "imagePositionHorizontal": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Horizontal Position",
          "description": "Horizontal position of the watermark image. Default = 'center'",
          "x-ms-dynamic-values": {
            "operationId": "GetImagePositionHorizontal",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "imagePositionVertical": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Vertical Position",
          "description": "Vertical position of the watermark image. Default = 'center'",
          "x-ms-dynamic-values": {
            "operationId": "GetImagePositionVertical",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3091_CreateChartImage": {
      "required": [
        "chart"
      ],
      "type": "object",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Width",
          "description": "Width of the image in pixels. Default = 500"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Height",
          "description": "Height of the image in pixels. Default = 500"
        },
        "devicePixelRatio": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Device Pixel Ratio",
          "description": "Device pixel ratio of the image. Default = 1.0"
        },
        "backgroundColor": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Background Color",
          "description": "Background color in RGB, HEX, HSL or color name. Default = 'transparent'"
        },
        "format": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of the created image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "version": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Version",
          "description": "Version"
        },
        "chart": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table Data",
          "description": "Chart data (JSON or CSV) that will be used to create the chart image."
        },
        "type": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Chart Type",
          "description": "Chart type of the generated image. Default = 'Bar'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartTypes",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3101_CreateTableImage": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Width",
          "description": "Width of the image in pixels. Default = 500"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Height",
          "description": "Height of the image in pixels. Default = 500"
        },
        "devicePixelRatio": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Device Pixel Ratio",
          "description": "Device pixel ratio of the image. Default = 1.0"
        },
        "backgroundColor": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Background Color",
          "description": "Background color in RGB, HEX, HSL or color name. Default = 'transparent'"
        },
        "format": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of the created image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "version": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Version",
          "description": "Version"
        },
        "data": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table Data",
          "description": "Table data as JSON or CSV that will be used to create the chart image."
        },
        "title": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Title",
          "description": "Title of the image appears above the table image"
        },
        "hasLines": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Show Table Borders?",
          "description": "Draw columns and rows with lines"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV3111_CreateGraphImage": {
      "required": [
        "graph"
      ],
      "type": "object",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Width",
          "description": "Width of the image in pixels. Default = 500"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Image Height",
          "description": "Height of the image in pixels. Default = 500"
        },
        "devicePixelRatio": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Device Pixel Ratio",
          "description": "Device pixel ratio of the image. Default = 1.0"
        },
        "backgroundColor": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Background Color",
          "description": "Background color in RGB, HEX, HSL or color name. Default = 'transparent'"
        },
        "format": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Output Format",
          "description": "Output format of the created image. Default = 'PNG'",
          "x-ms-dynamic-values": {
            "operationId": "GetChartImageFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "version": {
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-summary": "Version",
          "description": "Version"
        },
        "graph": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Graph Data",
          "description": "Graph data in syntax of the Graph Description Language (DOT)"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV4012_FileToPdf": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        },
        "fileName": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Origin File Name",
          "description": "Only used with 'Extract from origin file name'. E.g. 'MyFileName.docx'"
        },
        "fileExtension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Origin File Extension",
          "description": "Origin File extension",
          "x-ms-dynamic-values": {
            "operationId": "GetFileExtensions",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV4021_MergePdfs": {
      "required": [
        "file1",
        "file2"
      ],
      "type": "object",
      "properties": {
        "file1": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File 1",
          "description": "The first file input"
        },
        "file2": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File 2",
          "description": "The second file input"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV4031_PdfMetadata": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV4041_ProtectPdf": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        },
        "ownerPassword": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Owner Password",
          "description": "Protect the editing of the PDF with the owner password"
        },
        "userPassword": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "User Password",
          "description": "Protect the opening of the PDF with the user password"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV4051_UnProtectPdf": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        },
        "ownerPassword": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Owner Password",
          "description": "Owner Password"
        },
        "removePermissions": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Permissions",
          "description": "Remove all access permissions. Default is 'Yes'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5011_CreateWordFile": {
      "required": [
        "sections"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Section"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Section",
          "description": "Section"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5021_ExtractWordBookmarks": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        },
        "includeHiddenBookmarks": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Include Hidden Bookmarks?",
          "description": "include Hidden Bookmarks?"
        },
        "searchKey": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Search Name",
          "description": "Search for text in the bookmark name"
        },
        "searchValue": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Search Content",
          "description": "Search for text in the bookmark content"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5031_AddImageToWord": {
      "required": [
        "image"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image",
          "description": "Image to add (JPEG, PNG, ...) or image URL"
        },
        "imageText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Caption Text",
          "description": "Text displayed next to image"
        },
        "maxWidth": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Maximum Image Width",
          "description": "Maximum width in pixels, capped at 800 (page width). Default: Original width"
        },
        "maxHeight": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Maximum Image Height",
          "description": "Maximum height in pixels, capped at 2400 (page height). Default: Original height"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5042_AddImageWithinTableToWord": {
      "required": [
        "image"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image",
          "description": "Image to add (JPEG, PNG, ...) or image URL. Table is created automatically"
        },
        "imageText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Description Text",
          "description": "Text displayed next to image"
        },
        "maxWidth": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Maximum Image Width",
          "description": "Maximum width in pixels, capped at 600 (page width) Default: Original width"
        },
        "maxHeight": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Maximum Image Height",
          "description": "Maximum height in pixels, capped at 2400 (page height) Default: Original height"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5052_AddTableToWord": {
      "required": [
        "table"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "table": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table Data",
          "description": "Table data in CSV or JSON format"
        },
        "hasHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Show Headers?",
          "description": "Show headers of the table? Default = true"
        },
        "tableStyle": {
          "default": "GridTable1Light",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table Style",
          "description": "'Table Style', as it is named in the original Word document",
          "x-ms-dynamic-values": {
            "operationId": "GetWordTableStyles",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "tableText": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table Caption",
          "description": "Text displayed next to table"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5061_AddTextToWord": {
      "required": [
        "sectionType",
        "text"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "sectionType": {
          "default": "Heading1",
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetWordSectionTypes",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "text": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Text"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5071_InsertTextToWord": {
      "required": [
        "existingFileContent",
        "placeholderName"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to insert text in"
        },
        "placeholderName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder Name",
          "description": "The text between prefix and suffix where to insert the text, e.g. {{InsertHere}}"
        },
        "placeholderText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder Text",
          "description": "Placeholder text"
        },
        "placeholderPrefix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Prefix",
          "description": "Opening placeholder delimiter e.g. {{InsertHere}}. Default = '{{'"
        },
        "placeholderSuffix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Suffix",
          "description": "Closing placeholder delimiter e.g. {{InsertHere}}. Default = '}}'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5081_InsertImageToWord": {
      "required": [
        "existingFileContent",
        "placeholderImage"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to insert image in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder Name",
          "description": "The text between prefix and suffix where to insert the image, e.g. {{InsertHere}}"
        },
        "placeholderImage": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image",
          "description": "Placeholder image"
        },
        "maxWidth": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Maximum Image Width",
          "description": "Maximum width in pixels, capped at 800 (page width). Default: Original width"
        },
        "maxHeight": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Maximum Image Height",
          "description": "Maximum height in pixels, capped at 2400 (page height). Default: Original height"
        },
        "placeholderPrefix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Prefix",
          "description": "Opening placeholder delimiter e.g. {{InsertHere}}. Default = '{{'"
        },
        "placeholderSuffix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Suffix",
          "description": "Closing placeholder delimiter e.g. {{InsertHere}}. Default = '}}'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5091_InsertTableToWord": {
      "required": [
        "existingFileContent"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to insert table in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder Name",
          "description": "The text between prefix and suffix where to insert the table, e.g. {{InsertHere}}"
        },
        "placeholderTable": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder Table",
          "description": "Placeholder table as JSON or CSV"
        },
        "tableStyle": {
          "default": "GridTable1Light",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table style",
          "description": "Table style",
          "x-ms-dynamic-values": {
            "operationId": "GetWordTableStyles",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "hasHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Show Headers?",
          "description": "Show headers of the table? Default = true"
        },
        "placeholderPrefix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Prefix",
          "description": "Opening placeholder delimiter e.g. {{InsertHere}}. Default = '{{'"
        },
        "placeholderSuffix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Suffix",
          "description": "Closing placeholder delimiter e.g. {{InsertHere}}. Default = '}}'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5101_AddHtmlToWord": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML to embed in the Word file"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5110_InsertMultipleTextSectionsToWord": {
      "required": [
        "existingFileContent",
        "insertSections"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to insert text in"
        },
        "insertSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsertSection"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder",
          "description": "Placeholder"
        },
        "placeholderPrefix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Prefix",
          "description": "Opening placeholder delimiter e.g. {{InsertHere}}. Default = '{{'"
        },
        "placeholderSuffix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Suffix",
          "description": "Closing placeholder delimiter e.g. {{InsertHere}}. Default = '}}'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5120_ExtractWordContentControls": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        },
        "searchTag": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Search Tag",
          "description": "Search for text in tag"
        },
        "searchTitle": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Search Title",
          "description": "Search for text in title"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5130_UpdateWordTableOfContents": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV5140_UpdateWordContentControl": {
      "required": [
        "file",
        "name"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update"
        },
        "name": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Name",
          "description": "Tag or title of the content control which should be updated"
        },
        "value": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Value",
          "description": "Updated value of the content control"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV6011_ConvertSharePointSearchResults": {
      "required": [
        "sharepointResult"
      ],
      "type": "object",
      "properties": {
        "sharepointResult": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SP search result",
          "description": "SharePoint search result"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7012_ConvertHtmlTableToJson": {
      "required": [
        "htmlTable"
      ],
      "type": "object",
      "properties": {
        "htmlTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML Table",
          "description": "HTML table"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7022_ConvertHtmlToPdf": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML content that will be used to create the PDF file"
        },
        "isLandscape": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Landscape Format?",
          "description": "Is the PDF to be created in landscape format? Default = false"
        },
        "imageQuality": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Quality of Image Content",
          "description": "Maximum image quality (in pixels) for the included images. Default = 800"
        },
        "footerOption": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Footer Options",
          "description": "Display options in the document footer. Nothing displayed by default",
          "x-ms-dynamic-values": {
            "operationId": "GetFooterOptions",
            "value-path": "value",
            "value-title": "name",
            "parameters": { }
          }
        },
        "headerOption": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Header Options",
          "description": "Display options in the document header. Nothing displayed by default",
          "x-ms-dynamic-values": {
            "operationId": "GetHeaderOptions",
            "value-path": "value",
            "value-title": "name",
            "parameters": { }
          }
        },
        "paperFormat": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Paper Format",
          "description": "Defines the paper format, e.g. A3, A5, Letter, etc. Default = 'A4'",
          "x-ms-dynamic-values": {
            "operationId": "GetPaperFormats",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "marginTop": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Top margin",
          "description": "Defines the top margin (in pixels) of the PDF. Default = 20"
        },
        "marginBottom": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Bottom margin",
          "description": "Defines the bottom margin (in pixels) of the PDF. Default = 20"
        },
        "marginLeft": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Left margin",
          "description": "Defines the left margin (in pixels) of the PDF. Default = 10"
        },
        "marginRight": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Right margin",
          "description": "Defines the right margin (in pixels) of the PDF. Default = 20"
        },
        "pageRanges": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Page Ranges",
          "description": "Defines which pages are to be printed, e.g. 1-3,5 etc. All pages by default"
        },
        "scale": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Scale",
          "description": "Defines the scaling factor of the page content. Default = 1"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7031_ConvertHtmlToImage": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML Content or URL"
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Width",
          "description": "Image Width (in pixels). Default = 500"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Height",
          "description": "Image Height (in pixels). Default = 500"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7041_ConvertHtmlToWord": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML content that will be used to create the Word file"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7051_ConvertJsonToHtmlTable": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7061_ConvertCsvToHtmlTable": {
      "required": [
        "csv"
      ],
      "type": "object",
      "properties": {
        "csv": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV",
          "description": "CSV"
        },
        "dataIncludesHeader": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "CSV has Headers?",
          "description": "CSV has headers?"
        },
        "autoDiscoverFieldTypes": {
          "default": false,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Field Types?",
          "description": "Auto-detect field types?"
        },
        "maxScanRows": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Number of Rows for Field Type Detection",
          "description": "Number of rows for automatic field type detection. Default = 20"
        },
        "ignoreEmptyLine": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Remove Empty Rows?",
          "description": "Remove empty rows"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Skip a Number of Rows",
          "description": "Skip a number of rows at beginning. Default = 0"
        },
        "skipLast": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Stop at a specific Row",
          "description": "Stop at a specific row number. Default = convert all rows"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Field separator (delimiter). Default = 'Auto-detect separator'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "mayHaveQuotedFields": {
          "default": true,
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Auto-detect Quote Delimiter?",
          "description": "Auto-detect quote delimiter?"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7070_ConvertHtmlTableToCsv": {
      "required": [
        "htmlTable"
      ],
      "type": "object",
      "properties": {
        "htmlTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML Table",
          "description": "HTML table"
        },
        "delimiter": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Separator",
          "description": "Separator (delimiter) of the fields. Default = ';'",
          "x-ms-dynamic-values": {
            "operationId": "GetSeparators",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV7080_ConvertHtmlTableToExcel": {
      "required": [
        "htmlTable"
      ],
      "type": "object",
      "properties": {
        "htmlTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML Table",
          "description": "If the input has multiple HTML tables, each goes into a separate Excel sheet"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV8010_ConvertXRechnungToPdf": {
      "required": [
        "xml"
      ],
      "type": "object",
      "properties": {
        "xml": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XRechnung",
          "description": "XML data of Factur X or ZUGFeRD regarding EN16931"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestV9010_InsertTextToPowerPoint": {
      "required": [
        "existingFileContent",
        "placeholderName"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing PowerPoint file to insert text in"
        },
        "placeholderName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder Name",
          "description": "Placeholder name"
        },
        "placeholderText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder Text",
          "description": "Placeholder text"
        },
        "placeholderPrefix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Prefix",
          "description": "Opening placeholder delimiter e.g. {{NAME}}. Default = '{{'"
        },
        "placeholderSuffix": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Placeholder Suffix",
          "description": "Closing placeholder delimiter e.g. {{NAME}}. Default = '}}'"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestWatermarkImageData": {
      "required": [
        "image",
        "watermarkImage"
      ],
      "type": "object",
      "properties": {
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Main Image",
          "description": "Main image which is overlapped by the watermark image"
        },
        "watermarkImage": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Watermark Image",
          "description": "Watermark image which should overlap the main image"
        },
        "opacity": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Opacity",
          "description": "Opacity (in %) of the watermark image. Default = '25'"
        },
        "ratio": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Ratio",
          "description": "Ratio (in %) of the watermark image to the main image. Default = '25'"
        },
        "imagePositionHorizontal": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Horizontal Position",
          "description": "Horizontal position of the watermark image. Default = 'center'",
          "x-ms-dynamic-values": {
            "operationId": "GetImagePositionHorizontal",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "imagePositionVertical": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Watermark Vertical Position",
          "description": "Vertical position of the watermark image. Default = 'center'",
          "x-ms-dynamic-values": {
            "operationId": "GetImagePositionVertical",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "DtoRequestWordHtmlData": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "html": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML to create the Word"
        }
      },
      "additionalProperties": false
    },
    "DtoRequestWordTableData": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "table": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table Data",
          "description": "Table data in CSV or JSON format"
        },
        "tableStyle": {
          "default": "ListTable1Light",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table Style",
          "description": "'Table Style', as it is named in the original Word document",
          "x-ms-dynamic-values": {
            "operationId": "GetWordTableStyles",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "tableText": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table Caption",
          "description": "Text displayed next to table"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseColor": {
      "type": "object",
      "properties": {
        "rgb": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "RGB",
          "description": "RGB"
        },
        "hex": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HEX",
          "description": "HEX"
        },
        "cmyk": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CMYK",
          "description": "CMYK"
        },
        "hsl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HSL",
          "description": "HSL"
        },
        "hsv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HSV",
          "description": "HSV"
        },
        "xyz": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XYZ",
          "description": "XYZ"
        },
        "yiq": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YIQ",
          "description": "YIQ"
        },
        "yuv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YUV",
          "description": "YUV"
        },
        "colorName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Color name",
          "description": "Color name"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseCsv": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV response",
          "description": "CSV response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseFile": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileContent": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseHtml": {
      "type": "object",
      "properties": {
        "html": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML response",
          "description": "HTML response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseJson": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1013_ConvertJsonToCsv": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV response",
          "description": "CSV response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1022_ConvertCsvToJson": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1032_ConvertCsvToExcel": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1042_ConvertJsonToXml": {
      "type": "object",
      "properties": {
        "xml": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XML response",
          "description": "XML response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1052_ConvertXmlToJson": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1062_ConvertJsonToExcel": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1071_ConvertYamlToJson": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1081_ConvertJsonToYaml": {
      "type": "object",
      "properties": {
        "yaml": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YAML response",
          "description": "YAML response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1090_ConvertJsonToTextTable": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text response",
          "description": "Text response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV1100_ConvertExcelToJson": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        },
        "schema": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON Schema response",
          "description": "JSON Schema response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2011_RegularExpression": {
      "type": "object",
      "properties": {
        "isMatch": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is match?",
          "description": ""
        },
        "matches": {
          "type": "array",
          "items": { }
        },
        "firstMatch": {
          "x-ms-visibility": "important",
          "x-ms-summary": "First match",
          "description": ""
        },
        "firstMatchValue": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First match value",
          "description": ""
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2021_IbanData": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is Valid",
          "description": "Is Valid"
        },
        "isSepaCountry": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is Valid SEPA Country",
          "description": "Is Valid Single Euro Payment Areas (SEPA) Country"
        },
        "countryCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Country Code",
          "description": "Country Code"
        },
        "bban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "BBAN",
          "description": "Basic Bank Account Number (BBAN)"
        },
        "bankCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Code",
          "description": "Bank Code"
        },
        "branchCode": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Branch Code",
          "description": "Branch Code"
        },
        "accountNumber": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Account Number",
          "description": "Account Number"
        },
        "formattedIban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Formatted IBAN",
          "description": "Formatted International Bank Account Number (IBAN)"
        },
        "unformattedIban": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Unformatted IBAN",
          "description": "Unformatted International Bank Account Number (IBAN)"
        },
        "swift_code": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SWIFT Code",
          "description": "SWIFT Code / BIC"
        },
        "bank_name": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Name",
          "description": "Bank Name"
        },
        "bank_city": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank City",
          "description": "Bank City"
        },
        "bank_zip": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank ZIP",
          "description": "Bank ZIP"
        },
        "bank_adress": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bank Address",
          "description": "Bank Address"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2031_UrlToFile": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2041_Translate": {
      "type": "object",
      "properties": {
        "firstTranslation": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First translation response",
          "description": "First translation response"
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Translations response",
          "description": "Translations response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2051_SortJson": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2061_SortCsv": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV response",
          "description": "CSV response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2071_ConvertColor": {
      "type": "object",
      "properties": {
        "rgb": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "RGB",
          "description": "RGB"
        },
        "hex": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HEX",
          "description": "HEX"
        },
        "cmyk": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CMYK",
          "description": "CMYK"
        },
        "hsl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HSL",
          "description": "HSL"
        },
        "hsv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HSV",
          "description": "HSV"
        },
        "xyz": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XYZ",
          "description": "XYZ"
        },
        "yiq": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YIQ",
          "description": "YIQ"
        },
        "yuv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YUV",
          "description": "YUV"
        },
        "colorName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Color name",
          "description": "Color name"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2081_CombineCsvs": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CSV response",
          "description": "CSV response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2091_CombineJsonArrays": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2100_ExtractJsonObjectProperties": {
      "type": "object",
      "properties": {
        "propertyNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Property names as list",
          "description": "Property names as list"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonPropertyDetail"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Properties as list",
          "description": "Properties as list"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2110_ReplaceTextWithPattern": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Replaced Text",
          "description": "Replaced Text"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2120_MatchPatternCheck": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Match Success",
          "description": "Match Success"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2130_SmartTextSplit": {
      "type": "object",
      "properties": {
        "textSegments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Text segments as list",
          "description": "Text segments as list"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2140_ExtractTextAccordingToPattern": {
      "type": "object",
      "properties": {
        "matches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Text matches as list",
          "description": "Text matches as list"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV2150_ExecuteJavaScript": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Result response",
          "description": "Result response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3022_ResizeImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3031_RotateImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3041_CompressImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3051_ReadCode": {
      "type": "object",
      "properties": {
        "codeValue": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code value",
          "description": "Code value"
        },
        "codeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Code type",
          "description": "Code type"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3062_CreateCode": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3071_ImageMetaData": {
      "type": "object",
      "properties": {
        "imageFormat": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image format",
          "description": "Image format"
        },
        "imageSize": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image size",
          "description": "Image size"
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Width",
          "description": "Width"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Height",
          "description": "Height"
        },
        "orientation": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Orientation",
          "description": "Orientation"
        },
        "bits": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bits per Pixel",
          "description": "Bits per Pixel"
        },
        "recordingDate": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Date of recording",
          "description": "Date of recording"
        },
        "horizontalResolution": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Horizontal Resolution",
          "description": "Horizontal Resolution"
        },
        "verticalResolution": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Vertical Resolution",
          "description": "Vertical Resolution"
        },
        "hasEXIFData": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Has EXIF Data",
          "description": "Has EXIF Data"
        },
        "exifData": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "EXIF Data",
          "description": "EXIF Data"
        },
        "hasXMPData": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Has XMP Data",
          "description": "Has XMP Data"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3081_CreateWatermarkImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3091_CreateChartImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3101_CreateTableImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV3111_CreateGraphImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV4012_ConvertFileToPdf": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV4021_MergePdfs": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV4031_PdfMetadata": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author",
          "description": "Author"
        },
        "creationDate": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "CreationDate",
          "description": "CreationDate"
        },
        "creator": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Creator",
          "description": "Creator"
        },
        "modificationDate": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "ModificationDate",
          "description": "ModificationDate"
        },
        "producer": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Producer",
          "description": "Producer"
        },
        "subject": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Subject",
          "description": "Subject"
        },
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "Title"
        },
        "fileSize": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "FileSize",
          "description": "FileSize"
        },
        "pdfVersion": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDFVersion",
          "description": "PDFVersion"
        },
        "pageCount": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "PageCount",
          "description": "PageCount"
        },
        "keywords": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Keywords",
          "description": "Keywords"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV4041_ProtectPdf": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV4051_UnProtectPdf": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5011_CreateWordFile": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5021_ExtractWordBookmarks": {
      "type": "object",
      "properties": {
        "wordBookmarks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValPair"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Word Bookmarks",
          "description": "List of Word Bookmarks"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5031_AddImageToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5042_AddImageWithinTableToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5052_AddTableToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5061_AddTextToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5071_InsertTextToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5091_InsertTableToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5101_AddHtmlToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5110_InsertMultipleTextSectionsToWord": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5120_ExtractWordContentControls": {
      "type": "object",
      "properties": {
        "wordControls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WordControl"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Word Content Controls",
          "description": "List of Content Controls"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV5130_UpdateWordTableOfContents": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV6011_ConvertSharePointSearchResults": {
      "type": "object",
      "properties": {
        "sharePointSearchResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharePointSearchResultResponse"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Code value",
          "description": "Code value"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV7012_ConvertHtmlTableToJson": {
      "required": [
        "firstTable"
      ],
      "type": "object",
      "properties": {
        "firstTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First JSON table response",
          "description": "First JSON table response"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "All JSON tables response",
          "description": "All JSON tables response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV7022_ConvertHtmlToPdf": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV7031_ConvertHtmlToImage": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV7070_ConvertHtmlTableToCsv": {
      "required": [
        "firstCsvTable"
      ],
      "type": "object",
      "properties": {
        "firstCsvTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First CSV table response",
          "description": "First CSV table response"
        },
        "csvTables": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "All CSV tables response",
          "description": "All CSV tables response"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV7080_ConvertHtmlTableToExcel": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "DtoResponseV8010_ConvertXRechnungToPdf": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileString": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "FileContentResponse": {
      "type": "object",
      "properties": {
        "fileContent": {
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        }
      },
      "additionalProperties": false
    },
    "FileData": {
      "required": [
        "file"
      ],
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File",
          "description": "File"
        }
      },
      "additionalProperties": false
    },
    "FileDataTuple": {
      "required": [
        "file1",
        "file2"
      ],
      "type": "object",
      "properties": {
        "file1": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File 1",
          "description": "The first file input"
        },
        "file2": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File 2",
          "description": "The second file input"
        }
      },
      "additionalProperties": false
    },
    "FileResponse": {
      "type": "object",
      "properties": {
        "file": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response",
          "description": "File response"
        },
        "fileContent": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "File response as string",
          "description": "File response as string"
        },
        "mimeType": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "MIME type",
          "description": "MIME type"
        },
        "extension": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Extension",
          "description": "Extension"
        }
      },
      "additionalProperties": false
    },
    "HtmlData": {
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML",
          "description": "HTML"
        }
      },
      "additionalProperties": false
    },
    "HtmlTableData": {
      "required": [
        "htmlTable"
      ],
      "type": "object",
      "properties": {
        "htmlTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "HTML Table",
          "description": "HTML table"
        }
      },
      "additionalProperties": false
    },
    "ImageMetaDataResponse": {
      "type": "object",
      "properties": {
        "imageFormat": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image format",
          "description": "Image format"
        },
        "imageSize": {
          "format": "double",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image size",
          "description": "Image size"
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Width",
          "description": "Width"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Height",
          "description": "Height"
        },
        "orientation": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Orientation",
          "description": "Orientation"
        },
        "bits": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Bits per Pixel",
          "description": "Bits per Pixel"
        },
        "recordingDate": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Date of recording",
          "description": "Date of recording"
        },
        "horizontalResolution": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Horizontal Resolution",
          "description": "Horizontal Resolution"
        },
        "verticalResolution": {
          "format": "float",
          "type": "number",
          "x-ms-visibility": "important",
          "x-ms-summary": "Vertical Resolution",
          "description": "Vertical Resolution"
        },
        "hasEXIFData": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Has EXIF Data",
          "description": "Has EXIF Data"
        },
        "exifData": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "EXIF Data",
          "description": "EXIF Data"
        },
        "hasXMPData": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Has XMP Data",
          "description": "Has XMP Data"
        }
      },
      "additionalProperties": false
    },
    "InsertSection": {
      "required": [
        "placeholderName"
      ],
      "type": "object",
      "properties": {
        "placeholderName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Name",
          "description": "The text between prefix and suffix where to insert the text, e.g. {{InsertHere}}"
        },
        "placeholderText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Placeholder text"
        }
      },
      "additionalProperties": false
    },
    "InsertWordImage": {
      "required": [
        "existingFileContent",
        "placeholderImage"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to insert image in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder name",
          "description": "Placeholder name"
        },
        "placeholderImage": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder image",
          "description": "Placeholder image"
        }
      },
      "additionalProperties": false
    },
    "InsertWordTable": {
      "required": [
        "existingFileContent"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to insert table in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder name",
          "description": "Placeholder name"
        },
        "placeholderTable": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder table",
          "description": "Placeholder table as json"
        },
        "tableStyle": {
          "default": "ListTable1Light",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table style",
          "description": "Table style",
          "x-ms-dynamic-values": {
            "operationId": "GetWordTableStyles",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "InsertWordText": {
      "required": [
        "existingFileContent"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to insert text in"
        },
        "placeholderName": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder name",
          "description": "Placeholder name"
        },
        "placeholderText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Placeholder text",
          "description": "Placeholder text"
        }
      },
      "additionalProperties": false
    },
    "JsonData": {
      "required": [
        "json"
      ],
      "type": "object",
      "properties": {
        "json": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON",
          "description": "JSON"
        }
      },
      "additionalProperties": false
    },
    "JsonPropertyDetail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "JsonResponse": {
      "type": "object",
      "properties": {
        "json": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON response",
          "description": "JSON response"
        }
      },
      "additionalProperties": false
    },
    "JsonTableResponse": {
      "required": [
        "firstTable"
      ],
      "type": "object",
      "properties": {
        "firstTable": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "JSON table response",
          "description": "JSON table response"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "KeyValPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Key",
          "description": "Key"
        },
        "value": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Value",
          "description": "Value"
        }
      },
      "additionalProperties": false
    },
    "ListOption": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Pdf_Metadata": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Author",
          "description": "Author"
        },
        "creationDate": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "CreationDate",
          "description": "CreationDate"
        },
        "creator": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Creator",
          "description": "Creator"
        },
        "modificationDate": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "ModificationDate",
          "description": "ModificationDate"
        },
        "producer": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Producer",
          "description": "Producer"
        },
        "subject": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Subject",
          "description": "Subject"
        },
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "Title"
        },
        "fileSize": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "FileSize",
          "description": "FileSize"
        },
        "pdfVersion": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "PDFVersion",
          "description": "PDFVersion"
        },
        "pageCount": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "PageCount",
          "description": "PageCount"
        },
        "keywords": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Keywords",
          "description": "Keywords"
        }
      },
      "additionalProperties": false
    },
    "RegExp": {
      "required": [
        "input"
      ],
      "type": "object",
      "properties": {
        "input": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text to match",
          "description": "The string to search for a match"
        },
        "pattern": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular Expression",
          "description": "The .NET regular expression pattern to match"
        },
        "option": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular expression option",
          "description": "Select regular expression option",
          "x-ms-dynamic-values": {
            "operationId": "GetRegexOptions",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "isMatch": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Is match?",
          "description": ""
        },
        "matches": {
          "type": "array",
          "items": { }
        },
        "firstMatch": {
          "x-ms-visibility": "important",
          "x-ms-summary": "First match",
          "description": ""
        },
        "firstMatchValue": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First match value",
          "description": ""
        }
      },
      "additionalProperties": false
    },
    "RegExpRequest": {
      "required": [
        "input"
      ],
      "type": "object",
      "properties": {
        "input": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text to match",
          "description": "The string to search for a match"
        },
        "pattern": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular Expression",
          "description": "The .NET regular expression pattern to match"
        },
        "option": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Regular expression option",
          "description": "Select regular expression option",
          "x-ms-dynamic-values": {
            "operationId": "GetRegexOptions",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "Section": {
      "required": [
        "sectionContent",
        "sectionType"
      ],
      "type": "object",
      "properties": {
        "sectionType": {
          "default": "Heading1",
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetWordSectionTypes",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "sectionContent": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Text"
        }
      },
      "additionalProperties": false
    },
    "SharePointSearchResultResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "Title"
        },
        "link": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Link",
          "description": "Link"
        }
      },
      "additionalProperties": false
    },
    "SharepointResultData": {
      "required": [
        "sharepointResult"
      ],
      "type": "object",
      "properties": {
        "sharepointResult": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SP search result",
          "description": "SharePoint search result"
        }
      },
      "additionalProperties": false
    },
    "TranslationData": {
      "required": [
        "translation"
      ],
      "type": "object",
      "properties": {
        "translation": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Translation",
          "description": "Translation"
        }
      },
      "additionalProperties": false
    },
    "TranslationResponse": {
      "type": "object",
      "properties": {
        "firstTranslation": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "First translation response",
          "description": "First translation response"
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Translations response",
          "description": "Translations response"
        }
      },
      "additionalProperties": false
    },
    "UrlData": {
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "URL",
          "description": "URL"
        }
      },
      "additionalProperties": false
    },
    "WordControl": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lock": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "WordCreationObject": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Section"
          }
        }
      },
      "additionalProperties": false
    },
    "WordImage": {
      "required": [
        "image"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image",
          "description": "Image to add (JPEG, PNG, ...)"
        },
        "imageText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Caption Text",
          "description": "Text displayed next to image"
        }
      },
      "additionalProperties": false
    },
    "WordImageWithinTable": {
      "required": [
        "image"
      ],
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "image": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Image",
          "description": "Image to add"
        },
        "imageText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Description Text",
          "description": "Text displayed next to image"
        }
      },
      "additionalProperties": false
    },
    "WordTable": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "table": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table",
          "description": "Table as JSON"
        },
        "tableText": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Table Caption",
          "description": "Text displayed next to table"
        },
        "tableStyle": {
          "default": "ListTable1Light",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Table style",
          "description": "Table style",
          "x-ms-dynamic-values": {
            "operationId": "GetWordTableStyles",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        }
      },
      "additionalProperties": false
    },
    "WordText": {
      "type": "object",
      "properties": {
        "existingFileContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Existing File Content",
          "description": "Existing Word file to update. By default a blank Word file is used."
        },
        "sectionType": {
          "default": "Heading1",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetWordSectionTypes",
            "value-path": "name",
            "value-title": "name",
            "parameters": { }
          }
        },
        "text": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "Text"
        }
      },
      "additionalProperties": false
    },
    "XmlData": {
      "required": [
        "xml"
      ],
      "type": "object",
      "properties": {
        "xml": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XML",
          "description": "XML"
        }
      },
      "additionalProperties": false
    },
    "XmlResponse": {
      "type": "object",
      "properties": {
        "xml": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "XML response",
          "description": "XML response"
        }
      },
      "additionalProperties": false
    },
    "YamlData": {
      "required": [
        "yaml"
      ],
      "type": "object",
      "properties": {
        "yaml": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "YAML",
          "description": "YAML"
        }
      },
      "additionalProperties": false
    },
    "YamlResponse": {
      "type": "object",
      "properties": {
        "yaml": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Yaml response",
          "description": "Yaml response"
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "ApiKey": {
      "type": "apiKey",
      "name": "ApiKey",
      "in": "header",
      "description": "ApiKey Authorization header "
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.power2apps.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.power2apps.com/en/converterprivacypolicy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Data"
    }
  ]
}