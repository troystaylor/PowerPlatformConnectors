{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "HHS Media Services",
    "description": "The Department of Health and Human Service have created an easy way for public health partners to access federally produced digital resources - including web content, images, video, data, infographics, and more - for use on websites, apps, and social media. Syndication allows science-based resources to be combined with information at state and local levels by sharing health messaging for maximum impact.",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.digitalmedia.hhs.gov",
  "basePath": "/api/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/resources/campaigns.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of Campaigns.",
            "schema": {
              "$ref": "#/definitions/CampaignWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get campaigns",
        "description": "Retrieve the media listings for a specific campaign.",
        "tags": [
          "campaigns"
        ],
        "parameters": [
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "The offset of the records set to return for pagination.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Set of fields to sort the records by.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "CampaignsGet"
      }
    },
    "/resources/campaigns/{id}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Campaign identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/CampaignWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get campaign",
        "description": "Retrieve information about a specific campaign.",
        "tags": [
          "campaigns"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the record to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "CampaignGet"
      }
    },
    "/resources/campaigns/{id}/media.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of media items for the Campaign identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media items for campaign",
        "description": "Retrieve the media items for a specific campaign.",
        "tags": [
          "campaigns"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the campaign to find media items for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "The offset of the records set to return for pagination.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "CampaignMediaGet"
      }
    },
    "/resources/campaigns/{id}/syndicate.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Renders the list of media items associated with the Tag identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/SyndicateMarshallerWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get syndicate items for campaign",
        "description": "Retrieve the syndicate items for a specific campaign.",
        "tags": [
          "campaigns"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the record to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "displayMethod",
            "description": "Method used to render an HTML request. Accepts one: mv, list, feed.",
            "in": "query",
            "x-ms-summary": "Display Method",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "CampaignSyndicateGet"
      }
    },
    "/resources/languages.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list Languages.",
            "schema": {
              "$ref": "#/definitions/LanguageWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get languages",
        "description": "Retrieve a list of available languages.",
        "tags": [
          "languages"
        ],
        "parameters": [
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Return records starting at the offset index.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "LanguagesGet"
      }
    },
    "/resources/languages/{id}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Language identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/LanguageWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get language",
        "description": "Retrieve information about a specific language.",
        "tags": [
          "languages"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the language to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "LanguageGet"
      }
    },
    "/resources/media.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of media items matching the specified query parameters.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media items",
        "description": "Retrieve a list of media items.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "The offset of the records set to return for pagination.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Set of fields to sort the records by.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "The ascending or descending order.",
            "in": "query",
            "x-ms-summary": "Order",
            "required": false,
            "type": "string"
          },
          {
            "name": "mediaTypes",
            "description": "Find all media items belonging to the specified media types.",
            "in": "query",
            "x-ms-summary": "Media Types",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Find all media items containing the provided name, case insensitive.",
            "in": "query",
            "x-ms-summary": "Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "collectionId",
            "description": "Restrict filtering to media items in a specific collection.",
            "in": "query",
            "x-ms-summary": "Collection ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nameContains",
            "description": "Find all media items containing the partial name, case insensitive.",
            "in": "query",
            "x-ms-summary": "Name Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "descriptionContains",
            "description": "Find all media items containing the provided partial description, case insensitive.",
            "in": "query",
            "x-ms-summary": "Description Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceUrl",
            "description": "Find all media items which have the provided sourceUrl, case insensitive.",
            "in": "query",
            "x-ms-summary": "Source URL",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceUrlContains",
            "description": "Find all media items which contain the provided partial sourceUrl, case insensitive.",
            "in": "query",
            "x-ms-summary": "Source URL Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "customThumbnailUrl",
            "description": "Find all media items which have the provided customThumbnailUrl, case insensitive.",
            "in": "query",
            "x-ms-summary": "Custom Thumbnail URL",
            "required": false,
            "type": "string"
          },
          {
            "name": "customThumbnailUrlContains",
            "description": "Find all media items which contain the provided partial customThumbnailUrl, case insensitive.",
            "in": "query",
            "x-ms-summary": "Custom Thumbnail URL Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateContentAuthored",
            "description": "Find all media items authored on the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Date Content Authored",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateContentUpdated",
            "description": "Find all media items updated on the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Date Content Updated",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateContentPublished",
            "description": "Find all media items published on the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Date Content Published",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateContentReviewed",
            "description": "Find all media items reviewed on the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Date Content Reviewed",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateSyndicationCaptured",
            "description": "Find all media items syndicated on the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Date Syndication Captured",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateSyndicationUpdated",
            "description": "Find all media items updated through the syndication system on the provided day, (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Date Syndication Updated",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentAuthoredSinceDate",
            "description": "Find all media items authored since the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Authored Since Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentAuthoredBeforeDate",
            "description": "Find all media items authored before the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Authored Before Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentAuthoredInRange",
            "description": "Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Authored In Range",
            "required": false,
            "type": "string"
          },
          {
            "name": "contentUpdatedSinceDate",
            "description": "Find all media items updated since the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Updated Since Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentUpdatedBeforeDate",
            "description": "Find all media items updated before the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Updated Before Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentUpdatedInRange",
            "description": "Find all media items updated between the provided start and end days (RFC 3339, comma separated, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Updated In Range",
            "required": false,
            "type": "string"
          },
          {
            "name": "contentPublishedSinceDate",
            "description": "Find all media items updated since the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Published Since Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentPublishedBeforeDate",
            "description": "Find all media items published before the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Published Before Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentPublishedInRange",
            "description": "Find all media items published between the provided start and end days (RFC 3339, comma separated, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Published In Range",
            "required": false,
            "type": "string"
          },
          {
            "name": "contentReviewedSinceDate",
            "description": "Find all media items reviewed since the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Reviewed Since Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentReviewedBeforeDate",
            "description": "Find all media items reviewed before the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Reviewed Before Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "contentReviewedInRange",
            "description": "Find all media items reviewed between the provided start and end days (RFC 3339, comma separated, time ignored).",
            "in": "query",
            "x-ms-summary": "Content Reviewed In Range",
            "required": false,
            "type": "string"
          },
          {
            "name": "syndicationCapturedSinceDate",
            "description": "Find all media items authored since the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Captured Since Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "syndicationCapturedBeforeDate",
            "description": "Find all media items authored before the provided day (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Captured Before Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "syndicationCapturedInRange",
            "description": "Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Captured In Range",
            "required": false,
            "type": "string"
          },
          {
            "name": "syndicationUpdatedSinceDate",
            "description": "Find all media items updated since the provided day, (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Updated Since Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "syndicationUpdatedBeforeDate",
            "description": "Find all media items updated before the provided day, (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Updated Before Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "syndicationUpdatedInRange",
            "description": "Find all media items updated between the provided start and end days, (RFC 3339, comma separated, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Updated In Range",
            "required": false,
            "type": "string"
          },
          {
            "name": "syndicationVisibleSinceDate",
            "description": "Find all media items visible since the provided day, (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Visible Since Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "syndicationVisibleBeforeDate",
            "description": "Find all media items visible before the provided day, (RFC 3339, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Visible Before Date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "syndicationVisibleInRange",
            "description": "Find all media items visible between the provided start and end days, (RFC 3339, comma separated, time ignored).",
            "in": "query",
            "x-ms-summary": "Syndication Visible In Range",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "languageId",
            "description": "Find all media items written in the language specified by identifier.",
            "in": "query",
            "x-ms-summary": "Language ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageName",
            "description": "Find all media items written in the language specified by name, case insensitive.",
            "in": "query",
            "x-ms-summary": "Language Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "languageIsoCode",
            "description": "Find all media items written in the language specified by 639-2 ISO Code , case insensitive.",
            "in": "query",
            "x-ms-summary": "Language ISO Code",
            "required": false,
            "type": "string"
          },
          {
            "name": "hash",
            "description": "Find all media items which match the provided hash, case insensitive.",
            "in": "query",
            "x-ms-summary": "Hash",
            "required": false,
            "type": "string"
          },
          {
            "name": "hashContains",
            "description": "Find all media items which match the provided partial hash, case insensitive.",
            "in": "query",
            "x-ms-summary": "Hash Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceId",
            "description": "Find all media items that belong to the source specified by identifier.",
            "in": "query",
            "x-ms-summary": "Source ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sourceName",
            "description": "Find all media items that belong to the source specified by name, case insensitive.",
            "in": "query",
            "x-ms-summary": "Source Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceNameContains",
            "description": "Find all media items that belong to the source specified by partial name, case insensitive.",
            "in": "query",
            "x-ms-summary": "Source Name Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceAcronym",
            "description": "Find all media items that belong to the source specified by acronym, case insensitive.",
            "in": "query",
            "x-ms-summary": "Source Acronym",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceAcronymContains",
            "description": "Find all media items that belong to the source specified by partial acronym, case insensitive.",
            "in": "query",
            "x-ms-summary": "Source Acronym Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagIds",
            "description": "Find only media items tagged with the specified tag Ids.",
            "in": "query",
            "x-ms-summary": "Tag IDs",
            "required": false,
            "type": "string"
          },
          {
            "name": "restrictToSet",
            "description": "Find only media from within the supplied list of Ids.",
            "in": "query",
            "x-ms-summary": "Restrict To Set",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBy",
            "description": "Find all media items containing the createdBy value.",
            "in": "query",
            "x-ms-summary": "Created By",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "MediaGet"
      }
    },
    "/resources/media/featured.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Get the list of featured content in the syndication system.",
            "schema": {
              "$ref": "#/definitions/MediaItem"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get featured content",
        "description": "Retrieve a list of featured content in the syndication system.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Return records starting at the offset index.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "MediaFeaturedGet"
      }
    },
    "/resources/media/mostPopularMedia.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of media items with the highest ratings.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get popular media items",
        "description": "Retrieve a list of the media with the highest ratings.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "The offset of the records set to return for pagination.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "MediaPopularGet"
      }
    },
    "/resources/media/searchResults.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of media items matching the search query 'q'.<p>Please enter keyword or URL in search query 'q'.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Search media items",
        "description": "Retrieve a list of media items that match the search query.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "q",
            "description": "The search query supplied by the user.",
            "in": "query",
            "x-ms-summary": "Search Query",
            "required": true,
            "type": "string"
          },
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "The offset of the records set to return for pagination.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "MediaSearchGet"
      }
    },
    "/resources/media/{id}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the media item identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media item",
        "description": "Retrieve information about a specific media item.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the record to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "MediaItemGet"
      }
    },
    "/resources/media/{id}/content": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the raw content (html, image, etc...) for the media item identified by the identifier.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media item content",
        "description": "Retrieve the content of a media item.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the media to show content for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "calledByBuild",
            "description": "The method that called this method.",
            "in": "query",
            "x-ms-summary": "Called By Build",
            "required": false,
            "type": "boolean"
          }
        ],
        "operationId": "MediaContentGet"
      }
    },
    "/resources/media/{id}/embed.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the javascript or iFrame embed code for the media item identified by identifier.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media item embed code",
        "description": "Retrieve the JavaScript or iFrame embed code for this media item (to embed it on a web page).",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the media to get embed code for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "flavor",
            "description": "Currently supports 'iframe', defaults to 'javascript'.",
            "in": "query",
            "x-ms-summary": "Flavor",
            "required": false,
            "type": "string"
          },
          {
            "name": "width",
            "description": "The width of the generated iFrame.",
            "in": "query",
            "x-ms-summary": "Width",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "height",
            "description": "The height of the generated iFrame.",
            "in": "query",
            "x-ms-summary": "Height",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "iframeName",
            "description": "The name of the iFrame element.",
            "in": "query",
            "x-ms-summary": "iFrame Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeJquery",
            "description": "Should a reference to the JQuery Library be omitted?.",
            "in": "query",
            "x-ms-summary": "Exclude jQuery",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "excludeDiv",
            "description": "Should the div to insert content into be omitted?.",
            "in": "query",
            "x-ms-summary": "Exclude Div",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "divId",
            "description": "Should the div to insert content into have a specific name?.",
            "in": "query",
            "x-ms-summary": "Div ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayMethod",
            "description": "Method used to render an HTML request. Accepts one: mv, list, feed.",
            "in": "query",
            "x-ms-summary": "Display Method",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "MediaEmbedGet"
      }
    },
    "/resources/media/{id}/preview.jpg": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the JPG preview, where applicable, for the media item identified by the identifier.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get tag preview",
        "description": "Retrieve the JPG preview of the content item (where applicable).",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the media to get a preview for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "TagPreviewGet"
      }
    },
    "/resources/media/{id}/relatedMedia.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of media items related to the media item identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get related media items",
        "description": "Retrieve the other media related to the media item.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the media item to get related media for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Return records starting at the offset index.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "MediaRelatedGet"
      }
    },
    "/resources/media/{id}/syndicate.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the syndicated content for a given media item in the specified 'format' (HTML or JSON).",
            "schema": {
              "$ref": "#/definitions/SyndicateMarshallerWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media item syndicated content",
        "description": "Retrieve a list of syndicated content for a media item.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the media to show embed code for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cssClass",
            "description": "The CSS class to target for extraction.",
            "in": "query",
            "x-ms-summary": "CSS Class",
            "required": false,
            "type": "string",
            "default": "syndicate"
          },
          {
            "name": "stripStyles",
            "description": "Remove in-line styles from content.",
            "in": "query",
            "x-ms-summary": "Strip Styles",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "stripScripts",
            "description": "Remove script tags from content.",
            "in": "query",
            "x-ms-summary": "Strip Scripts",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "stripImages",
            "description": "Remove image tags from content.",
            "in": "query",
            "x-ms-summary": "Strip Images",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "stripBreaks",
            "description": "Remove break tags from content.",
            "in": "query",
            "x-ms-summary": "Strip Breaks",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "stripClasses",
            "description": "Remove class attributes from content (except 'syndicate').",
            "in": "query",
            "x-ms-summary": "Strip Classes",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "font-size",
            "description": "Set font size (in points) of p, div, and span tags.",
            "in": "query",
            "x-ms-summary": "Font Size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageFloat",
            "description": "Accepts valid CSS float options, such as 'left' or 'right'. Will inject a style into the content before rendering.",
            "in": "query",
            "x-ms-summary": "Image Float",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageMargin",
            "description": "Accepts 4 CSV values representing pixel sizes of margin similar to CSS. Default format is 'north,east,south,west' - for example '0,10,10,0' would put a 10 pixel margin on the right and bottom sides of an image. Will inject a style into the content before rendering.",
            "in": "query",
            "x-ms-summary": "Image Margin",
            "required": false,
            "type": "string"
          },
          {
            "name": "autoplay",
            "description": "If content is a video, the embeded video will auto play when loaded.",
            "in": "query",
            "x-ms-summary": "Autoplay",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "rel",
            "description": "If content is a video, related items will be shown at the end of playback.",
            "in": "query",
            "x-ms-summary": "Related",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "operationId": "MediaSyndicatedGet"
      }
    },
    "/resources/media/{id}/thumbnail.jpg": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the JPG thumbnail, where applicable, for the media item identified by the identifier.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media item JPG thumbnail",
        "description": "Retrieve the JPG thumbnail of the content item (where applicable).",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the media to get a thumbnail for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "MediaThumbnailGet"
      }
    },
    "/resources/media/{id}/youtubeMetaData.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Youtube metadata, where applicable, for the media item identified by the identifier.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta"
                },
                "callback": {
                  "type": "string"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/YoutubeMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media item YouTube metadata",
        "description": "Retrieve the YouTube metadata for a media item.",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the video to show meta data for.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "MediaYouTubeGet"
      }
    },
    "/resources/mediaTypes.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of available MediaTypes.",
            "schema": {
              "$ref": "#/definitions/MediaTypeHolderWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get media types",
        "description": "Retrieve a list of media types.",
        "tags": [
          "mediaTypes"
        ],
        "operationId": "MediaTypesGet"
      }
    },
    "/resources/sources.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of Sources.",
            "schema": {
              "$ref": "#/definitions/SourceWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get sources",
        "description": "Retrieve a list of available sources.",
        "tags": [
          "sources"
        ],
        "parameters": [
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Return records starting at the offset index.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "SourcesGet"
      }
    },
    "/resources/sources/{id}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Source identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/SourceWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get source",
        "description": "Retrieve information about a specific source.",
        "tags": [
          "sources"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the source to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "SourceGet"
      }
    },
    "/resources/sources/{id}/syndicate.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Renders the list of media items associated with the Source identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get source media items",
        "description": "Retrieve the media items for a source.",
        "tags": [
          "sources"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the record to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "displayMethod",
            "description": "Method used to render an HTML request. Accepts one: mv, list, feed.",
            "in": "query",
            "x-ms-summary": "Display Method",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "SourceMediaGet"
      }
    },
    "/resources/tags.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of Tags matching the specified query parameters in the specified format.",
            "schema": {
              "$ref": "#/definitions/TagMarshallerWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get tags",
        "description": "Retrieve a list of available tags.",
        "tags": [
          "tags"
        ],
        "parameters": [
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Return records starting at the offset index.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "description": "Return tags matching the supplied name.",
            "in": "query",
            "x-ms-summary": "Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "nameContains",
            "description": "Return tags which contain the supplied partial name.",
            "in": "query",
            "x-ms-summary": "Name Contains",
            "required": false,
            "type": "string"
          },
          {
            "name": "mediaId",
            "description": "Return tags associated with the supplied media identifier.",
            "in": "query",
            "x-ms-summary": "Media ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "typeId",
            "description": "Return tags belonging to the supplied tag type identifier.",
            "in": "query",
            "x-ms-summary": "Type ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "typeName",
            "description": "Return tags belonging to the supplied tag type name.",
            "in": "query",
            "x-ms-summary": "Type Name",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "TagsGet"
      }
    },
    "/resources/tags/tagLanguages.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of TagLanguages.",
            "schema": {
              "$ref": "#/definitions/TagLanguageMarshallerWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get tag languages",
        "description": "Retrieve a list of tag languages.",
        "tags": [
          "tags"
        ],
        "operationId": "TagLanguagesGet"
      }
    },
    "/resources/tags/tagTypes.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Renders the list of media items associated with the Tag identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/TagTypeMarshallerWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get tag media types",
        "description": "Retrieve a list of media types for a specific tag.",
        "tags": [
          "tags"
        ],
        "operationId": "TagMediaTypesGet"
      }
    },
    "/resources/tags/{id}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the Tag identified by the ID in the specified format.",
            "schema": {
              "$ref": "#/definitions/TagMarshallerWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get tag",
        "description": "Retrieve information about a specific tag.",
        "tags": [
          "tags"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the record to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "TagGet"
      }
    },
    "/resources/tags/{id}/media.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of media items associated with the Tag identified by the identifier.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get tag media items",
        "description": "Retrieve a list of media items for a specific tag.",
        "tags": [
          "tags"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the tag to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Return records starting at the offset index.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "TagMediaGet"
      }
    },
    "/resources/tags/{id}/related.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns the list of Tags related to the Tag identified by the ID in the specified format.",
            "schema": {
              "$ref": "#/definitions/TagMarshallerWrapped"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get related tags",
        "description": "Retrieves information about related tags to a specific tag.",
        "tags": [
          "tags"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the tag to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "The name of the property to which sorting will be applied.",
            "in": "query",
            "x-ms-summary": "Sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "max",
            "description": "The maximum number of records to return.",
            "in": "query",
            "x-ms-summary": "Max",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Return records starting at the offset index.",
            "in": "query",
            "x-ms-summary": "Offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "operationId": "TagRelatedGet"
      }
    },
    "/resources/tags/{id}/syndicate.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Renders the list of media items associated with the Tag identified by the identifier.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get tag syndicate items",
        "description": "Retrieve a list of syndicate items for a specific tag.",
        "tags": [
          "tags"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the record to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "displayMethod",
            "description": "Method used to render an HTML request. Accepts one: mv, list, feed.",
            "in": "query",
            "x-ms-summary": "Display Method",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "TagSyndicateGet"
      }
    },
    "/resources/userMediaLists/{id}.json": {
      "get": {
        "responses": {
          "200": {
            "description": "Get a specific user media list by identifier.",
            "schema": {
              "$ref": "#/definitions/MediaItemWrapped"
            }
          },
          "400": {
            "description": "Invalid identifier."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "summary": "Get user media list",
        "description": "Retrieve a media list for a specific user.",
        "tags": [
          "userMediaLists"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The identifier of the record to look up.",
            "in": "path",
            "x-ms-summary": "ID",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "displayMethod",
            "description": "Method used to render an HTML request. Accepts one: mv, list, feed.",
            "in": "query",
            "x-ms-summary": "Display Method",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "MediaListGet"
      }
    }
  },
  "definitions": {
    "Video": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        }
      }
    },
    "Tweet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "tweetId": {
          "type": "integer",
          "format": "int32",
          "description": "The tweet identifier.",
          "title": "Tweet ID"
        },
        "messageText": {
          "type": "string",
          "description": "The message text.",
          "title": "Message Text"
        },
        "mediaUrl": {
          "type": "string",
          "description": "The media URL address.",
          "title": "Media URL"
        },
        "videoVariantUrl": {
          "type": "string",
          "description": "The video variant URL address.",
          "title": "Video Variant URL"
        },
        "tweetDate": {
          "type": "string",
          "format": "date",
          "description": "The tweet date.",
          "title": "Tweet Date"
        }
      }
    },
    "PDF": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        }
      }
    },
    "MediaItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        }
      }
    },
    "Infographic": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "The height.",
          "title": "Height"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "The width.",
          "title": "Width"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "The width.",
          "title": "Width"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "The height.",
          "title": "Height"
        }
      }
    },
    "Html": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        }
      }
    },
    "Collection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        },
        "customAttributionUrl": {
          "type": "string",
          "description": "The custom attribution URL address.",
          "title": "Custom Attribution URL"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        },
        "targetUrl": {
          "type": "string",
          "description": "The target URL address.",
          "title": "Target URL"
        },
        "customThumbnailUrl": {
          "type": "string",
          "description": "The custom thumbnail URL address.",
          "title": "Custom Thumbnail URL"
        },
        "customPreviewUrl": {
          "type": "string",
          "description": "The custom preview URL address.",
          "title": "Custom Preview URL"
        },
        "dateContentAuthored": {
          "type": "string",
          "format": "date",
          "description": "The date the content was authored.",
          "title": "Date Content Authored"
        },
        "dateContentUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date content was updated.",
          "title": "Date Content Updated"
        },
        "dateContentPublished": {
          "type": "string",
          "format": "date",
          "description": "The date content was published.",
          "title": "Date Content Published"
        },
        "dateContentReviewed": {
          "type": "string",
          "format": "date",
          "description": "The date content reviewed.",
          "title": "Date Content Reviewed"
        },
        "dateSyndicationCaptured": {
          "type": "string",
          "format": "date",
          "description": "The date syndication captured.",
          "title": "Date Syndication Captured"
        },
        "dateSyndicationUpdated": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was updated.",
          "title": "Date Syndication Updated"
        },
        "dateSyndicationVisible": {
          "type": "string",
          "format": "date",
          "description": "The date syndication was visible.",
          "title": "Date Syndication Visible"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "externalGuid": {
          "type": "string",
          "description": "The external GUID.",
          "title": "External GUID"
        },
        "hash": {
          "type": "string",
          "description": "The hash.",
          "title": "Hash"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdBy": {
          "type": "string",
          "description": "The created by.",
          "title": "Created By"
        },
        "foreignSyndicationAPIUrl": {
          "type": "string",
          "description": "The foreign syndication API URL address.",
          "title": "Foreign Syndication URL"
        },
        "extendedAttributes": {
          "$ref": "#/definitions/ExtendedAttribute"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        }
      }
    },
    "Source": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "acronym": {
          "type": "string",
          "description": "The acronym.",
          "title": "Acronym"
        },
        "websiteUrl": {
          "type": "string",
          "description": "The website URL address.",
          "title": "Website URL"
        },
        "largeLogoUrl": {
          "type": "string",
          "description": "The large logo URL address.",
          "title": "Large Logo URL"
        },
        "smallLogoUrl": {
          "type": "string",
          "description": "The small logo URL address.",
          "title": "Small Logo URL"
        },
        "contactEmail": {
          "type": "string",
          "description": "The contact email address.",
          "title": "Contact Email"
        }
      }
    },
    "Language": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO code.",
          "title": "ISO Code"
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether is active.",
          "title": "Is Active"
        }
      }
    },
    "ExtendedAttribute": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "value": {
          "type": "string",
          "description": "The value.",
          "title": "Value"
        }
      }
    },
    "Campaign": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date.",
          "title": "Start Date"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date.",
          "title": "End Date"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "contactEmail": {
          "type": "string",
          "description": "The contact email address.",
          "title": "Contact Email"
        }
      }
    },
    "AlternateImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "The width.",
          "title": "Width"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "The height.",
          "title": "Height"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "url": {
          "type": "string",
          "description": "The URL address.",
          "title": "URL"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum.",
          "title": "Max"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The offset.",
          "title": "Offset"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The count.",
          "title": "Count"
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "The total.",
          "title": "Total"
        },
        "pageNum": {
          "type": "integer",
          "format": "int32",
          "description": "The page number.",
          "title": "Page Number"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of pages.",
          "title": "Total Pages"
        },
        "sort": {
          "type": "string",
          "description": "The sort.",
          "title": "Sort"
        },
        "currentUrl": {
          "type": "string",
          "description": "The current URL address.",
          "title": "Current URL"
        },
        "nextUrl": {
          "type": "string",
          "description": "The next URL address.",
          "title": "Next URL"
        },
        "previousUrl": {
          "type": "string",
          "description": "The previous URL address.",
          "title": "Previous URL address"
        }
      }
    },
    "Meta": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The status.",
          "title": "Status"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "description": "The message.",
          "title": "Message"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "The error message.",
          "title": "Error Message"
        },
        "errorDetail": {
          "type": "string",
          "description": "The error detail.",
          "title": "Error Detail"
        },
        "errorCode": {
          "type": "string",
          "description": "The error code.",
          "title": "Error Code"
        },
        "userMessage": {
          "type": "string",
          "description": "The user message.",
          "title": "User Message"
        }
      }
    },
    "YoutubeMetadata": {
      "type": "object",
      "properties": {}
    },
    "MediaTypeHolder": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        }
      }
    },
    "TagTypeMarshaller": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        }
      }
    },
    "TagLanguageMarshaller": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO code.",
          "title": "ISO Code"
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether is active.",
          "title": "Is Active"
        }
      }
    },
    "SyndicateMarshaller": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content.",
          "title": "Content"
        },
        "description": {
          "type": "string",
          "description": "The description.",
          "title": "Description"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "mediaType": {
          "type": "string",
          "description": "The media type.",
          "title": "Media Type"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "sourceUrl": {
          "type": "string",
          "description": "The source URL address.",
          "title": "Source URL"
        }
      }
    },
    "TagMarshaller": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier.",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name.",
          "title": "Name"
        },
        "language": {
          "$ref": "#/definitions/TagLanguageMarshaller"
        },
        "type": {
          "$ref": "#/definitions/TagTypeMarshaller"
        }
      }
    },
    "test": {},
    "VideoWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Video"
          },
          "description": "The result.",
          "title": "Result"
        }
      }
    },
    "PDFWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PDF"
          },
          "description": "The result.",
          "title": "Result"
        }
      }
    },
    "MediaItemWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaItem"
          },
          "description": "The media item.",
          "title": "Media Item"
        }
      }
    },
    "InfographicWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Infographic"
          },
          "description": "The infographic.",
          "title": "Infographic"
        }
      }
    },
    "ImageWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "description": "The image.",
          "title": "Image"
        }
      }
    },
    "HtmlWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Html"
          },
          "description": "The HTML.",
          "title": "HTML"
        }
      }
    },
    "CollectionWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          },
          "description": "The collection.",
          "title": "Collection"
        }
      }
    },
    "SourceWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Source"
          },
          "description": "The source.",
          "title": "Source"
        }
      }
    },
    "LanguageWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Language"
          },
          "description": "The language.",
          "title": "Language"
        }
      }
    },
    "ExtendedAttributeWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedAttribute"
          },
          "description": "The extended attribute.",
          "title": "Extended Attribute"
        }
      }
    },
    "CampaignWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "description": "The campaign.",
          "title": "Campaign"
        }
      }
    },
    "AlternateImageWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternateImage"
          },
          "description": "The alternate image.",
          "title": "Alternate Image"
        }
      }
    },
    "PaginationWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pagination"
          },
          "description": "The pagination.",
          "title": "Pagination"
        }
      }
    },
    "MetaWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Meta"
          },
          "description": "The meta.",
          "title": "Meta"
        }
      }
    },
    "MessageWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "description": "The message.",
          "title": "Message"
        }
      }
    },
    "YoutubeMetadataWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YoutubeMetadata"
          },
          "description": "The YouTube metadata.",
          "title": "YouTube Metadata"
        }
      }
    },
    "MediaTypeHolderWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaTypeHolder"
          },
          "description": "The media type holder.",
          "title": "Media Type Holder"
        }
      }
    },
    "TagTypeMarshallerWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagTypeMarshaller"
          },
          "description": "The tag type marshaller.",
          "title": "Tag Type Marshaller"
        }
      }
    },
    "TagLanguageMarshallerWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagLanguageMarshaller"
          },
          "description": "The tag language marshaller.",
          "title": "Tag Language Marshaller"
        }
      }
    },
    "SyndicateMarshallerWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyndicateMarshaller"
          },
          "description": "The syndicate marshaller.",
          "title": "Syndicate Marshaller"
        }
      }
    },
    "TagMarshallerWrapped": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "callback": {
          "type": "string",
          "description": "The callback.",
          "title": "Callback"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagMarshaller"
          },
          "description": "The tag marshaller.",
          "title": "Tag Marshaller"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [
    {
      "name": "media",
      "description": "Information about media."
    },
    {
      "name": "languages",
      "description": "Information about languages."
    },
    {
      "name": "mediaTypes",
      "description": "Information about media types."
    },
    {
      "name": "tags",
      "description": "Information about tags."
    },
    {
      "name": "campaigns",
      "description": "Information about campaigns."
    },
    {
      "name": "sources",
      "description": "Information about tags."
    },
    {
      "name": "resources",
      "description": "Global Search."
    },
    {
      "name": "userMediaLists",
      "description": "Get media from user generated lists."
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://digitalmedia.hhs.gov/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.hhs.gov/privacy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}